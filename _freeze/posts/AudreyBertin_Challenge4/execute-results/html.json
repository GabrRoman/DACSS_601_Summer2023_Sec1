{
  "hash": "63594e83af99ff56a10c69175200b539",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4\"\nauthor: \"Audrey Bertin\"\ndescription: \"Data wrangling with mutate\"\ndate: \"6/9/2023\"\nformat:\n  html:\n    df-print: paged\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - hotel_bookings\n  - dplyr\n  - mutate\n  - audrey_bertin\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\nFor this challenge, I'll be continuing with the dataset I used in challenge 2: `hotel_bookings.csv⭐⭐⭐⭐`\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels <- readr::read_csv(\"_data/hotel_bookings.csv\")\n```\n:::\n\n\nI provided an overview of the dataset in that challenge, which I'll share here as well.\n\n## Data Overview\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(hotels)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 119,390\nColumns: 32\n$ hotel                          <chr> \"Resort Hotel\", \"Resort Hotel\", \"Resort…\n$ is_canceled                    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n$ lead_time                      <dbl> 342, 737, 7, 13, 14, 14, 0, 9, 85, 75, …\n$ arrival_date_year              <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 201…\n$ arrival_date_month             <chr> \"July\", \"July\", \"July\", \"July\", \"July\",…\n$ arrival_date_week_number       <dbl> 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,…\n$ arrival_date_day_of_month      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ stays_in_weekend_nights        <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ stays_in_week_nights           <dbl> 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, …\n$ adults                         <dbl> 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ children                       <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ babies                         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ meal                           <chr> \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB\", \"BB…\n$ country                        <chr> \"PRT\", \"PRT\", \"GBR\", \"GBR\", \"GBR\", \"GBR…\n$ market_segment                 <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ distribution_channel           <chr> \"Direct\", \"Direct\", \"Direct\", \"Corporat…\n$ is_repeated_guest              <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_cancellations         <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_bookings_not_canceled <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ reserved_room_type             <chr> \"C\", \"C\", \"A\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ assigned_room_type             <chr> \"C\", \"C\", \"C\", \"A\", \"A\", \"A\", \"C\", \"C\",…\n$ booking_changes                <dbl> 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ deposit_type                   <chr> \"No Deposit\", \"No Deposit\", \"No Deposit…\n$ agent                          <chr> \"NULL\", \"NULL\", \"NULL\", \"304\", \"240\", \"…\n$ company                        <chr> \"NULL\", \"NULL\", \"NULL\", \"NULL\", \"NULL\",…\n$ days_in_waiting_list           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ customer_type                  <chr> \"Transient\", \"Transient\", \"Transient\", …\n$ adr                            <dbl> 0.00, 0.00, 75.00, 75.00, 98.00, 98.00,…\n$ required_car_parking_spaces    <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ total_of_special_requests      <dbl> 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 3, …\n$ reservation_status             <chr> \"Check-Out\", \"Check-Out\", \"Check-Out\", …\n$ reservation_status_date        <date> 2015-07-01, 2015-07-01, 2015-07-02, 20…\n```\n:::\n:::\n\n\nThis dataset has 119,300 rows and 32 columns. It contains many different data points on hotel reservations, including information about the customer (how many adults/children are staying, customer type, previous bookings by them, etc), the reservation (arrival date, length of stay, room type, etc), as well as the hotel (country location, distribution channel, hotel type, etc). Each row appears to refer to a single booking at a single hotel.\n\nThe hotels appear to be located all around the world and data covers the years 2015-2017:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(hotels$country)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  [1] \"PRT\"  \"GBR\"  \"USA\"  \"ESP\"  \"IRL\"  \"FRA\"  \"NULL\" \"ROU\"  \"NOR\"  \"OMN\" \n [11] \"ARG\"  \"POL\"  \"DEU\"  \"BEL\"  \"CHE\"  \"CN\"   \"GRC\"  \"ITA\"  \"NLD\"  \"DNK\" \n [21] \"RUS\"  \"SWE\"  \"AUS\"  \"EST\"  \"CZE\"  \"BRA\"  \"FIN\"  \"MOZ\"  \"BWA\"  \"LUX\" \n [31] \"SVN\"  \"ALB\"  \"IND\"  \"CHN\"  \"MEX\"  \"MAR\"  \"UKR\"  \"SMR\"  \"LVA\"  \"PRI\" \n [41] \"SRB\"  \"CHL\"  \"AUT\"  \"BLR\"  \"LTU\"  \"TUR\"  \"ZAF\"  \"AGO\"  \"ISR\"  \"CYM\" \n [51] \"ZMB\"  \"CPV\"  \"ZWE\"  \"DZA\"  \"KOR\"  \"CRI\"  \"HUN\"  \"ARE\"  \"TUN\"  \"JAM\" \n [61] \"HRV\"  \"HKG\"  \"IRN\"  \"GEO\"  \"AND\"  \"GIB\"  \"URY\"  \"JEY\"  \"CAF\"  \"CYP\" \n [71] \"COL\"  \"GGY\"  \"KWT\"  \"NGA\"  \"MDV\"  \"VEN\"  \"SVK\"  \"FJI\"  \"KAZ\"  \"PAK\" \n [81] \"IDN\"  \"LBN\"  \"PHL\"  \"SEN\"  \"SYC\"  \"AZE\"  \"BHR\"  \"NZL\"  \"THA\"  \"DOM\" \n [91] \"MKD\"  \"MYS\"  \"ARM\"  \"JPN\"  \"LKA\"  \"CUB\"  \"CMR\"  \"BIH\"  \"MUS\"  \"COM\" \n[101] \"SUR\"  \"UGA\"  \"BGR\"  \"CIV\"  \"JOR\"  \"SYR\"  \"SGP\"  \"BDI\"  \"SAU\"  \"VNM\" \n[111] \"PLW\"  \"QAT\"  \"EGY\"  \"PER\"  \"MLT\"  \"MWI\"  \"ECU\"  \"MDG\"  \"ISL\"  \"UZB\" \n[121] \"NPL\"  \"BHS\"  \"MAC\"  \"TGO\"  \"TWN\"  \"DJI\"  \"STP\"  \"KNA\"  \"ETH\"  \"IRQ\" \n[131] \"HND\"  \"RWA\"  \"KHM\"  \"MCO\"  \"BGD\"  \"IMN\"  \"TJK\"  \"NIC\"  \"BEN\"  \"VGB\" \n[141] \"TZA\"  \"GAB\"  \"GHA\"  \"TMP\"  \"GLP\"  \"KEN\"  \"LIE\"  \"GNB\"  \"MNE\"  \"UMI\" \n[151] \"MYT\"  \"FRO\"  \"MMR\"  \"PAN\"  \"BFA\"  \"LBY\"  \"MLI\"  \"NAM\"  \"BOL\"  \"PRY\" \n[161] \"BRB\"  \"ABW\"  \"AIA\"  \"SLV\"  \"DMA\"  \"PYF\"  \"GUY\"  \"LCA\"  \"ATA\"  \"GTM\" \n[171] \"ASM\"  \"MRT\"  \"NCL\"  \"KIR\"  \"SDN\"  \"ATF\"  \"SLE\"  \"LAO\" \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(hotels$arrival_date_year)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2015 2016 2017\n```\n:::\n:::\n\n\nIt is not entirely clear, however, which hotels are covered *or* any information about their cost.\n\n## Tidy Data\n\nThis data is already in a tidy format, meeting Hadley Wickham's 3 rules of tidy data:\n\n1. *Each variable must have its own column* -- Data is correctly separated into columns, no concerns here\n2. *Each observation must have its own row* -- Each row represents one reservation at a hotel (which is one observation) \n3. *Each value must have its own cell* -- There are not multiple pieces of information stored in the same cell of the data\n\nThere is also no need to pivot this data, as it is not in \"wide\" format. To be in wide format, there would need to be multiple responses of some type per row, such as a row representing a customer and columns representing their history of bookings. Instead, a row represents a single reservation at a hotel, which cannot be broken down further.\n\n## Identify variables that need to be mutated\n\nLooking at this data, we consider each variable and what format they should be in:\n\n#### Currently **character** but should be **factor**\n\nVariables that only have a limited set of categories should be turned into factors. It usually only makes sense to keep strings as characters if there are an undefined set of options (e.g. free text responses to a survey) or if the options are regularly changing. Otherwise, factors usually save memory and make it easier to graph things/make comparisons.\n\nThese are the following variables:\n\n- `hotel`\n- `arrival_date_month` \n- `meal` \n- `country` \n- `market_segment`\n- `distribution_channel`\n- `reserved_room_type`\n- `assigned_room_type`\n- `deposit_type`\n- `customer_type`\n- `reservation_status`\n\n\n#### Currently **double** but should be **factor**\n\nThese are variables that technically only have a yes (1) or no (0) option, but are currently categorized as numerical instead of categorical.\n\n- `is_canceled`\n- `is_repeated_guest`\n\n\n\n#### Currently **double** but should probably be **int**\n\nStoring values as doubles when they can only take on integer and not decimal values can take up more memory. There are quite a few of this type of variable in the data. This sort of modification isn't necessary for data analysis, though:\n\n- `lead_time`\n- `arrival_date_week_number`\n- `arrival_date_day_of_month`\n- `stays_in_weekend_nights`\n- `stays_in_week_nights`\n- `adults`\n- `children`\n- `babies`\n- `previous_cancellations`\n- `previous_bookings_not_canceled`\n- `booking_changes`\n- `required_car_parking_spaces`\n- `total_of_special_requests`\n\n\n#### Not entirely clear, but should probably stay as-is (with a minor modification)\n\nThere are two variables, `agent` and `company` that are currently character variables. They seem to store numeric IDs that refer to different agents and companies. \n\nLooking into these variables further, they both have a LOT of options.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlength(unique(hotels$agent))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 334\n```\n:::\n\n```{.r .cell-code}\nlength(unique(hotels$company))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 353\n```\n:::\n:::\n\n\nIt is theoretically possible that these options change regularly. Maybe someone changes ID number or IDs get removed from the data if people quit or contracts end with companies, so it probably does not make sense to store this as a factor.\n\nIt also does not make sense to store these as numeric (int), because there is no obvious meaning to an ordering. An agent of number \"243\" is not necessarily of higher status or importance than agent \"5\". \n\nTherefore, these can be left as character. However, one note to improve this encoding is to replace \"NULL\" with R's `NA` so that we can more easily track null values in the data.\n\n\n#### Already in the optimal format\n\n- `adr` (is a double, and has decimal options so this is correct)\n- `reservation_status_date` (is a date, and currently formatted as one)\n\n\n## Mutate variables\n\nWe now conduct the mutations that we described in the previous section:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhotels_mutated <- hotels %>%\n  mutate(\n    # Character -> Factor\n    hotel = as_factor(hotel),\n    arrival_date_month = as_factor(arrival_date_month),\n    meal = as_factor(meal),\n    country = as_factor(country), \n    market_segment = as_factor(market_segment), \n    distribution_channel = as_factor(distribution_channel),\n    reserved_room_type = as_factor(reserved_room_type),\n    assigned_room_type = as_factor(assigned_room_type),\n    deposit_type = as_factor(deposit_type),\n    customer_type = as_factor(customer_type),\n    reservation_status = as_factor(reservation_status),\n    # Double -> Factor\n    is_canceled = as_factor(is_canceled),\n    is_repeated_guest = as_factor(is_repeated_guest),\n    # Double -> Int\n    lead_time = as.integer(lead_time),\n    arrival_date_week_number = as.integer(arrival_date_week_number),\n    arrival_date_day_of_month = as.integer(arrival_date_day_of_month),\n    stays_in_weekend_nights = as.integer(stays_in_weekend_nights),\n    stays_in_week_nights = as.integer(stays_in_week_nights),\n    adults = as.integer(adults),\n    children = as.integer(children),\n    babies = as.integer(babies),\n    previous_cancellations = as.integer(previous_cancellations),\n    previous_bookings_not_canceled = as.integer(previous_bookings_not_canceled),\n    booking_changes = as.integer(booking_changes),\n    required_car_parking_spaces = as.integer(required_car_parking_spaces),\n    total_of_special_requests = as.integer(total_of_special_requests)\n    ) %>%\n    # Replace \"NULL\" values with NA\n    mutate(across(where(is.character), ~na_if(., \"NULL\")))\n```\n:::\n\n\nLooking at the results, we see that all still looks in good order and none of the variables appear to have an obvious bug that was introduced:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(hotels_mutated)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 119,390\nColumns: 32\n$ hotel                          <fct> Resort Hotel, Resort Hotel, Resort Hote…\n$ is_canceled                    <fct> 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, …\n$ lead_time                      <int> 342, 737, 7, 13, 14, 14, 0, 9, 85, 75, …\n$ arrival_date_year              <dbl> 2015, 2015, 2015, 2015, 2015, 2015, 201…\n$ arrival_date_month             <fct> July, July, July, July, July, July, Jul…\n$ arrival_date_week_number       <int> 27, 27, 27, 27, 27, 27, 27, 27, 27, 27,…\n$ arrival_date_day_of_month      <int> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ stays_in_weekend_nights        <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ stays_in_week_nights           <int> 0, 0, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 4, …\n$ adults                         <int> 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, …\n$ children                       <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ babies                         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ meal                           <fct> BB, BB, BB, BB, BB, BB, BB, FB, BB, HB,…\n$ country                        <fct> PRT, PRT, GBR, GBR, GBR, GBR, PRT, PRT,…\n$ market_segment                 <fct> Direct, Direct, Direct, Corporate, Onli…\n$ distribution_channel           <fct> Direct, Direct, Direct, Corporate, TA/T…\n$ is_repeated_guest              <fct> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_cancellations         <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ previous_bookings_not_canceled <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ reserved_room_type             <fct> C, C, A, A, A, A, C, C, A, D, E, D, D, …\n$ assigned_room_type             <fct> C, C, C, A, A, A, C, C, A, D, E, D, E, …\n$ booking_changes                <int> 3, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ deposit_type                   <fct> No Deposit, No Deposit, No Deposit, No …\n$ agent                          <chr> NA, NA, NA, \"304\", \"240\", \"240\", NA, \"3…\n$ company                        <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ days_in_waiting_list           <dbl> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ customer_type                  <fct> Transient, Transient, Transient, Transi…\n$ adr                            <dbl> 0.00, 0.00, 75.00, 75.00, 98.00, 98.00,…\n$ required_car_parking_spaces    <int> 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, …\n$ total_of_special_requests      <int> 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 3, …\n$ reservation_status             <fct> Check-Out, Check-Out, Check-Out, Check-…\n$ reservation_status_date        <date> 2015-07-01, 2015-07-01, 2015-07-02, 20…\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}