{
  "hash": "801aadd3d7211d35f0aa542887b75434",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1 Submission\"\nauthor: \"Suyash Bhagwat\"\ndescription: \"Reading in data and creating a post\"\ndate: \"5/31/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - railroads\n  - faostat\n  - wildbirds\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   railroad_2012_clean_county.csv ⭐\n-   birds.csv ⭐⭐\n-   FAOstat\\*.csv ⭐⭐\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐⭐\n\nFind the `_data` folder, located inside the `posts` folder. Then you can read in the data, using either one of the `readr` standard tidy read commands, or a specialized package such as `readxl`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Since this is my first time using R, I am using the easiest data set.\n#I am using the read_csv function to read the csv file\ndata_railroad <- read_csv(\"_data/railroad_2012_clean_county.csv\")\n```\n:::\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n**Ans**: The R code given below contains three common functions (spec(), head() and glimpse()) that are used to describe the data set.\n\nThe spec function tells us that the data set has three columns with the datatype given in brackets; state(chr),county(chr) and total_employees(dbl).\n\n::: {.cell}\n\n```{.r .cell-code}\n#spec function gives an overall idea of the column variable types\nspec(data_railroad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncols(\n  state = col_character(),\n  county = col_character(),\n  total_employees = col_double()\n)\n```\n:::\n:::\n\n\nThe head function gives us the first 6 rows.\n\n::: {.cell}\n\n```{.r .cell-code}\n#Head function gives the first few rows of the data\nhead(data_railroad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  state county               total_employees\n  <chr> <chr>                          <dbl>\n1 AE    APO                                2\n2 AK    ANCHORAGE                          7\n3 AK    FAIRBANKS NORTH STAR               2\n4 AK    JUNEAU                             3\n5 AK    MATANUSKA-SUSITNA                  2\n6 AK    SITKA                              1\n```\n:::\n:::\n\nThe glimpse function gives us the size of the data set which is 2930 rows x 3 cols. It also gives us an idea of the column names and datatypes along with the first few observations. Overall the glimpse function is the most concise method to get information about a data set.\n\nLooking at the data, it looks like it was gathered from the database of a railroad company in 2012 that keeps track of all its employees count by state and county.\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(data_railroad)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 2,930\nColumns: 3\n$ state           <chr> \"AE\", \"AK\", \"AK\", \"AK\", \"AK\", \"AK\", \"AK\", \"AL\", \"AL\", …\n$ county          <chr> \"APO\", \"ANCHORAGE\", \"FAIRBANKS NORTH STAR\", \"JUNEAU\", …\n$ total_employees <dbl> 2, 7, 2, 3, 2, 1, 88, 102, 143, 1, 25, 154, 13, 29, 45…\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}