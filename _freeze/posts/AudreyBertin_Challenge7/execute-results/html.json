{
  "hash": "3176ec29e32b679ddf73d40283429849",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7\"\nauthor: \"Audrey Bertin\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"6/20/2023\"\nformat:\n  html:\n    df-print: paged\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - air_bnb\n  - ggplot2\n  - audrey_bertin\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n\n## Challenge Overview\n\nFor today's challenge, I'll be continuing with the AirBnB data from challenges 5 and 6. As a reminder, an overview of this data is provided in the following sections.\n\n## The Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb <- readr::read_csv(\"_data/AB_NYC_2019.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(airbnb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 48,895\nColumns: 16\n$ id                             <dbl> 2539, 2595, 3647, 3831, 5022, 5099, 512…\n$ name                           <chr> \"Clean & quiet apt home by the park\", \"…\n$ host_id                        <dbl> 2787, 2845, 4632, 4869, 7192, 7322, 735…\n$ host_name                      <chr> \"John\", \"Jennifer\", \"Elisabeth\", \"LisaR…\n$ neighbourhood_group            <chr> \"Brooklyn\", \"Manhattan\", \"Manhattan\", \"…\n$ neighbourhood                  <chr> \"Kensington\", \"Midtown\", \"Harlem\", \"Cli…\n$ latitude                       <dbl> 40.64749, 40.75362, 40.80902, 40.68514,…\n$ longitude                      <dbl> -73.97237, -73.98377, -73.94190, -73.95…\n$ room_type                      <chr> \"Private room\", \"Entire home/apt\", \"Pri…\n$ price                          <dbl> 149, 225, 150, 89, 80, 200, 60, 79, 79,…\n$ minimum_nights                 <dbl> 1, 1, 3, 1, 10, 3, 45, 2, 2, 1, 5, 2, 4…\n$ number_of_reviews              <dbl> 9, 45, 0, 270, 9, 74, 49, 430, 118, 160…\n$ last_review                    <date> 2018-10-19, 2019-05-21, NA, 2019-07-05…\n$ reviews_per_month              <dbl> 0.21, 0.38, NA, 4.64, 0.10, 0.59, 0.40,…\n$ calculated_host_listings_count <dbl> 6, 2, 1, 1, 1, 1, 1, 1, 1, 4, 1, 1, 3, …\n$ availability_365               <dbl> 365, 355, 365, 194, 0, 129, 0, 220, 0, …\n```\n:::\n:::\n\n\nThis dataset has 48,895 rows and 16 columns. It contains information on different AirBnB properties located in New York City, NY.\n\nEach row represents a single property in the city. For each property, we have the following information;\n\n- `id`: unique identifier for the property\n- `name`: descriptive name shown on the AirBnB website that customers see when clicking on the property\n- `host_id`: unique identifier for the host of the property\n- `host_name`: first name of the property host\n- `neighbourhood_group`: borough name where property is located\n- `neighborhood`: neighborhood within the burough (more detailed location)\n- `latitude/longitude`: geographical coordinates of property\n- `room_type`: what type of property is being booked (private room in shared home, a whole home/apartment, etc)\n- `price`: nightly price, presumably in USD\n- `minimum_nights`: minimum length of stay\n- `number_of_reviews`: total number of reviews for the property on AirBnB so far\n- `last_review`: date of last review\n- `reviews_per_month`: average number of reviews left for the property each month\n- `calculated_host_listings_count`: number of listings/properties that this specific host has on AirBnB overall\n- `availability_365`: number of nights in the year that the property is available for booking on AirBnB\n\nRoom types include:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(airbnb$room_type)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Private room\"    \"Entire home/apt\" \"Shared room\"    \n```\n:::\n:::\n\n\nAll boroughs appear to be included:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(airbnb$neighbourhood_group)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Brooklyn\"      \"Manhattan\"     \"Queens\"        \"Staten Island\"\n[5] \"Bronx\"        \n```\n:::\n:::\n\n\nFor each borough, we have the following count of neighborhoods and properties:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb %>%\n  group_by(neighbourhood_group) %>%\n  summarize(n_properties = n(), n_neighborhoods = n_distinct(neighbourhood)) %>%\n  arrange(desc(n_properties))\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"neighbourhood_group\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"n_properties\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"n_neighborhoods\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Manhattan\",\"2\":\"21661\",\"3\":\"32\"},{\"1\":\"Brooklyn\",\"2\":\"20104\",\"3\":\"47\"},{\"1\":\"Queens\",\"2\":\"5666\",\"3\":\"51\"},{\"1\":\"Bronx\",\"2\":\"1091\",\"3\":\"48\"},{\"1\":\"Staten Island\",\"2\":\"373\",\"3\":\"43\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\nMost of the properties are located in Manhattan and Brooklyn, with significantly fewer in Queens, the Bronx, and Staten Island. Within each borough, we have a few dozen neighborhoods covered, so this data seems to have pretty good coverage of the city with no obvious big missing areas of data.\n\n## Tidy Data\n\nData is already in a tidy format, so no pivoting is necessary. Each row represents a single property, which can't be broken down into a longer format.\n\nHowever, we can mutate a few of the variables to get them into a better format for visualization. Specifically, the following variables should be turned into factors:\n\n- `neighbourhood_group`\n- `neighbourhood`\n- `room_type`\n\nThere are a few other modifications that can be made (e.g. converting some doubles to integers), but they are not necessary for the purpose of this visualization.\n\nWe do this mutation below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_tidy <- airbnb %>%\n  mutate(neighbourhood_group = as_factor(neighbourhood_group),\n         neighbourhood = as_factor(neighbourhood),\n         room_type = as_factor(room_type))\n```\n:::\n\n\n\n## Additional Mutation\n\nIn challenge 6, we created a new column representing the *year* of last review date. We repeat this step here so that we can add onto the graph we created for challenge 6:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_tidy <- airbnb_tidy %>%\n  rowwise() %>%\n  mutate(year_last_review = year(last_review))\n```\n:::\n\n\n\n\n\n## Visualization with Multiple Dimensions\n\nIn challenge 5, we created the following visualization, which shows the average price by property type. It is only two dimensional.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchallenge5_bar <- airbnb_tidy %>%\n  group_by(room_type, neighbourhood_group) %>%\n  summarize(avg_price = mean(price)) %>%\n  ggplot(aes(x = room_type, y = avg_price)) +\n  geom_col() +\n  ggtitle(\"Average Nightly AirBnB Price By Property Listing Type, NYC\") +\n  ylab(\"Average Nightly Price ($)\") +\n  xlab(\"Property/Rental Type\") +\n  theme_minimal()\n\nchallenge5_bar\n```\n\n::: {.cell-output-display}\n![](AudreyBertin_Challenge7_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nWe can add another dimension by adding a `facet_wrap` and bringing borough name into the visualization:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nchallenge5_bar + \n  facet_wrap(~neighbourhood_group) +\n  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  xlab(NULL)\n```\n\n::: {.cell-output-display}\n![](AudreyBertin_Challenge7_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\nWhen we break it up by borough, we can now compare prices across different areas! For example, we can see that average prices for entire homes/apartments are higher in Manhattan than in the other boroughs.\n\nWe can also view this a different way, using a colored bar chart:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_tidy %>%\n  group_by(room_type, neighbourhood_group) %>%\n  summarize(avg_price = mean(price)) %>%\n  ggplot(aes(x = room_type, y = avg_price, fill=neighbourhood_group)) +\n  geom_col(position=\"dodge\") +\n  ggtitle(\"Average Nightly AirBnB Price By Property Listing Type, NYC\") +\n  ylab(\"Average Nightly Price ($)\") +\n  xlab(\"Property/Rental Type\") +\n  scale_fill_brewer(palette=\"Dark2\")+\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](AudreyBertin_Challenge7_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nIn challenge 6, we created a line graph looking at properties by year of last review:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_tidy %>%\n  group_by(year_last_review) %>%\n  summarize(n_properties = n_distinct(id)) %>%\n  filter(!is.na(year_last_review)) %>%\n  ggplot(aes(x= year_last_review, y = n_properties)) + \n  geom_line() +\n  xlab(\"Year of Last Review\") +\n  ylab(\"Number of Properties\") + \n  ggtitle(\"Number of AirBnB Properties in NYC by Date of Last Review\") +\n  scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019), labels = c(\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](AudreyBertin_Challenge7_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nWe can break this down by property type, by drawing multiple lines on the same graph:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nairbnb_tidy %>%\n  group_by(year_last_review, room_type) %>%\n  summarize(n_properties = n_distinct(id)) %>%\n  filter(!is.na(year_last_review)) %>%\n  ggplot(aes(x= year_last_review, y = n_properties, col=room_type)) + \n  geom_line() +\n  xlab(\"Year of Last Review\") +\n  ylab(\"Number of Properties\") + \n  ggtitle(\"Number of AirBnB Properties in NYC by Date of Last Review\") +\n  scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019), labels = c(\"2011\", \"2012\", \"2013\", \"2014\", \"2015\", \"2016\", \"2017\", \"2018\", \"2019\")) +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](AudreyBertin_Challenge7_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nHere, we can now see that private rooms and entire homes greatly shot up in property count, but shared rooms much less so.",
    "supporting": [
      "AudreyBertin_Challenge7_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}