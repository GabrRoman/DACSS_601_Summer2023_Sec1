{
  "hash": "95c46c0383bdeb4fde921441f36654fd",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3\"\nauthor: \"Shuqi Hong\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"6/07/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n\neggs <- read.csv(\"_data/eggs_tidy.csv\")\n\nhead(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n     month year large_half_dozen large_dozen extra_large_half_dozen\n1  January 2004            126.0     230.000                  132.0\n2 February 2004            128.5     226.250                  134.5\n3    March 2004            131.0     225.000                  137.0\n4    April 2004            131.0     225.000                  137.0\n5      May 2004            131.0     225.000                  137.0\n6     June 2004            133.5     231.375                  137.0\n  extra_large_dozen\n1             230.0\n2             230.0\n3             230.0\n4             234.5\n5             236.0\n6             241.0\n```\n:::\n:::\n\nFrom the original file, it looks like the file is about the number of purchase of different sizes eggs in each year and months.\n\nWe can look the trend of the number in years. So first we drop the month colunm and sum all the number by years. The tibble is wide and not clear to see the year trend, so we pivot it.\n\n::: {.cell}\n\n```{.r .cell-code}\nyeartrend <- eggs %>% select(-month) %>%group_by(year) %>%\n  summarise_all(sum) %>%\n  t()\nyeartrend\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                           [,1] [,2]     [,3]     [,4]   [,5] [,6]   [,7]\nyear                   2004.000 2005 2006.000 2007.000 2008.0 2009 2010.0\nlarge_half_dozen       1563.250 1542 1542.000 1579.625 1881.5 2094 2094.0\nlarge_dozen            2763.625 2802 2802.000 2839.625 3127.5 3300 3221.5\nextra_large_half_dozen 1630.875 1626 1626.000 1663.625 1993.5 2226 2226.0\nextra_large_dozen      2847.500 2892 2896.875 2935.625 3223.5 3426 3426.0\n                         [,8]    [,9]   [,10]\nyear                   2011.0 2012.00 2013.00\nlarge_half_dozen       2094.0 2093.50 2136.00\nlarge_dozen            3227.5 3210.00 3210.00\nextra_large_half_dozen 2226.0 2231.26 2257.56\nextra_large_dozen      3426.0 3462.00 3480.00\n```\n:::\n\n```{.r .cell-code}\neggs %>% select(-month) %>%group_by(year) %>%\n  pivot_wider(names_from = year, values_from = c(large_half_dozen,large_dozen))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 15 × 22\n   extra_large_half_dozen extra_large_dozen large_half_dozen_2004\n                    <dbl>             <dbl> <list>               \n 1                   132               230  <dbl [1]>            \n 2                   134.              230  <dbl [1]>            \n 3                   137               230  <dbl [1]>            \n 4                   137               234. <dbl [1]>            \n 5                   137               236  <dbl [1]>            \n 6                   137               241  <dbl [3]>            \n 7                   136.              241  <dbl [1]>            \n 8                   136.              241  <dbl [3]>            \n 9                   136.              241. <NULL>               \n10                   136.              242. <NULL>               \n11                   138.              244. <NULL>               \n12                   139               245  <NULL>               \n13                   186.              286. <NULL>               \n14                   186.              288. <NULL>               \n15                   188.              290  <NULL>               \n# ℹ 19 more variables: large_half_dozen_2005 <list>,\n#   large_half_dozen_2006 <list>, large_half_dozen_2007 <list>,\n#   large_half_dozen_2008 <list>, large_half_dozen_2009 <list>,\n#   large_half_dozen_2010 <list>, large_half_dozen_2011 <list>,\n#   large_half_dozen_2012 <list>, large_half_dozen_2013 <list>,\n#   large_dozen_2004 <list>, large_dozen_2005 <list>, large_dozen_2006 <list>,\n#   large_dozen_2007 <list>, large_dozen_2008 <list>, …\n```\n:::\n:::\n\nI expect that the colunm is each year and row is each dozen, which is like the dataframe after using t(). The pivot function seems like unvailable in this situation.\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs %>% group_by(year)  %>% pivot_longer(`large_half_dozen`: `extra_large_dozen`, names_to = \"dozen\", values_to = \"number\" ) %>% group_by(dozen,year) %>% \n  summarise( mean = mean(`number`)) %>% \n  pivot_wider(names_from = year, values_from = mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 11\n# Groups:   dozen [4]\n  dozen    `2004` `2005` `2006` `2007` `2008` `2009` `2010` `2011` `2012` `2013`\n  <chr>     <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 extra_l…   237.   241    241.   245.   269.   286.   286.   286.   288.   290 \n2 extra_l…   136.   136.   136.   139.   166.   186.   186.   186.   186.   188.\n3 large_d…   230.   234.   234.   237.   261.   275    268.   269.   268.   268.\n4 large_h…   130.   128.   128.   132.   157.   174.   174.   174.   174.   178 \n```\n:::\n:::\n\nFrom this tibble, we can see the year trend of each dozen much clearer. We can also know people bought more extra large dozen and large dozen than other two scales in general.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmean_January <- eggs %>% filter(month == \"January\") %>% \n  pivot_longer(`large_half_dozen`: `extra_large_dozen`, names_to = \"January_dozen\", values_to = \"number\" ) %>%\n  group_by(January_dozen,year) %>%\n  summarise( January_mean = mean(`number`)) %>% \n  pivot_wider(names_from = year, values_from = January_mean)\n  \nmean_January\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 11\n# Groups:   January_dozen [4]\n  January_dozen   `2004` `2005` `2006` `2007` `2008` `2009` `2010` `2011` `2012`\n  <chr>            <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n1 extra_large_do…    230   241    241    242.    245   286.   286.   286.   286.\n2 extra_large_ha…    132   136.   136.   136.    139   186.   186.   186.   186.\n3 large_dozen        230   234.   234.   234.    237   278.   272.   268.   268.\n4 large_half_doz…    126   128.   128.   128.    132   174.   174.   174.   174.\n# ℹ 1 more variable: `2013` <dbl>\n```\n:::\n:::\n\nWe can also choose a specific month like January to see. The average value of extra_large_half_dozen in January from 2009 to 2012 didn't change which means it was quite steady. All scales of dozen had a large increase between 2008 and 2009. It should happen something in January 2009. Even though the general trend is increasing, the large_dozen has a little decrease from 2009.\n\n\n\n\n\n\n### Example: find current and future data dimensions\n\nOne easy way to do this is to think about the dimensions of your current data (tibble, dataframe, or matrix), and then calculate what the dimensions of the pivoted data should be.\n\nSuppose you have a dataset with $n$ rows and $k$ variables. In our example, 3 of the variables are used to identify a case, so you will be pivoting $k-3$ variables into a longer format where the $k-3$ variable names will move into the `names_to` variable and the current values in each of those columns will move into the `values_to` variable. Therefore, we would expect $n * (k-3)$ rows in the pivoted dataframe!\n\nLets see if this works with a simple example.\n\n\n::: {.cell tbl-cap='Example'}\n\n```{.r .cell-code}\ndf<-tibble(country = rep(c(\"Mexico\", \"USA\", \"France\"),2),\n           year = rep(c(1980,1990), 3), \n           trade = rep(c(\"NAFTA\", \"NAFTA\", \"EU\"),2),\n           outgoing = rnorm(6, mean=1000, sd=500),\n           incoming = rlogis(6, location=1000, \n                             scale = 400))\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n  country  year trade outgoing incoming\n  <chr>   <dbl> <chr>    <dbl>    <dbl>\n1 Mexico   1980 NAFTA     83.8     679.\n2 USA      1990 NAFTA   2184.      446.\n3 France   1980 EU       777.     1275.\n4 Mexico   1990 NAFTA   1325.     1354.\n5 USA      1980 NAFTA   1026.     1063.\n6 France   1990 EU      1217.     1813.\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * (ncol(df)-3)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 12\n```\n:::\n\n```{.r .cell-code}\n# expected columns \n3 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 5\n```\n:::\n:::\n\n\nOr simple example has $n = 6$ rows and $k - 3 = 2$ variables being pivoted, so we expect a new dataframe to have $n * 2 = 12$ rows x $3 + 2 = 5$ columns.\n\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Example\n\n\n::: {.cell tbl-cap='Pivoted Example'}\n\n```{.r .cell-code}\ndf<-pivot_longer(df, col = c(outgoing, incoming),\n                 names_to=\"trade_direction\",\n                 values_to = \"trade_value\")\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 5\n   country  year trade trade_direction trade_value\n   <chr>   <dbl> <chr> <chr>                 <dbl>\n 1 Mexico   1980 NAFTA outgoing               83.8\n 2 Mexico   1980 NAFTA incoming              679. \n 3 USA      1990 NAFTA outgoing             2184. \n 4 USA      1990 NAFTA incoming              446. \n 5 France   1980 EU    outgoing              777. \n 6 France   1980 EU    incoming             1275. \n 7 Mexico   1990 NAFTA outgoing             1325. \n 8 Mexico   1990 NAFTA incoming             1354. \n 9 USA      1980 NAFTA outgoing             1026. \n10 USA      1980 NAFTA incoming             1063. \n11 France   1990 EU    outgoing             1217. \n12 France   1990 EU    incoming             1813. \n```\n:::\n:::\n\n\nYes, once it is pivoted long, our resulting data are $12x5$ - exactly what we expected!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}