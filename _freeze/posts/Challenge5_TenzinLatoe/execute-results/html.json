{
  "hash": "eb5338e9bcf046159aef6f83057766db",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5\"\nauthor: \"Tenzin Latoe\"\ndescription: \"Introduction to Visualization\"\ndate: \"7/13/2023\"\nformat:\n  html:\n    df-print: kable \ncategories:\n  - challenge_5\n  - Tenzin Latoe\n  - cereal\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   cereal.csv ‚≠ê\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncereal_data <- read.csv(\"_data/cereal.csv\")\ncereal_data\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Cereal                | Sodium| Sugar|Type |\n|:---------------------|------:|-----:|:----|\n|Frosted Mini Wheats   |      0|    11|A    |\n|Raisin Bran           |    340|    18|A    |\n|All Bran              |     70|     5|A    |\n|Apple Jacks           |    140|    14|C    |\n|Captain Crunch        |    200|    12|C    |\n|Cheerios              |    180|     1|C    |\n|Cinnamon Toast Crunch |    210|    10|C    |\n|Crackling Oat Bran    |    150|    16|A    |\n|Fiber One             |    100|     0|A    |\n|Frosted Flakes        |    130|    12|C    |\n|Froot Loops           |    140|    14|C    |\n|Honey Bunches of Oats |    180|     7|A    |\n|Honey Nut Cheerios    |    190|     9|C    |\n|Life                  |    160|     6|C    |\n|Rice Krispies         |    290|     3|C    |\n|Honey Smacks          |     50|    15|A    |\n|Special K             |    220|     4|A    |\n|Wheaties              |    180|     4|A    |\n|Corn Flakes           |    200|     3|A    |\n|Honeycomb             |    210|    11|C    |\n\n</div>\n:::\n:::\n\n\n### Briefly describe the data\n\n::: {.cell}\n\n```{.r .cell-code}\ndim((cereal_data))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 20  4\n```\n:::\n\n```{.r .cell-code}\nhead(cereal_data)\n```\n\n::: {.cell-output-display}\n<div class=\"kable-table\">\n\n|Cereal              | Sodium| Sugar|Type |\n|:-------------------|------:|-----:|:----|\n|Frosted Mini Wheats |      0|    11|A    |\n|Raisin Bran         |    340|    18|A    |\n|All Bran            |     70|     5|A    |\n|Apple Jacks         |    140|    14|C    |\n|Captain Crunch      |    200|    12|C    |\n|Cheerios            |    180|     1|C    |\n\n</div>\n:::\n:::\n\n\nThis dataset shows 20 rows and 4 columns. The four column names are: Cereal, Sodium, Sugar, and Type. There are 20 enteries of different types of cereals. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Column names\ncolnames(cereal_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Cereal\" \"Sodium\" \"Sugar\"  \"Type\"  \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Types of names\nunique(cereal_data$Cereal)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Frosted Mini Wheats\"   \"Raisin Bran\"           \"All Bran\"             \n [4] \"Apple Jacks\"           \"Captain Crunch\"        \"Cheerios\"             \n [7] \"Cinnamon Toast Crunch\" \"Crackling Oat Bran\"    \"Fiber One\"            \n[10] \"Frosted Flakes\"        \"Froot Loops\"           \"Honey Bunches of Oats\"\n[13] \"Honey Nut Cheerios\"    \"Life\"                  \"Rice Krispies\"        \n[16] \"Honey Smacks\"          \"Special K\"             \"Wheaties\"             \n[19] \"Corn Flakes\"           \"Honeycomb\"            \n```\n:::\n:::\n\n\n## Tidy Data (as needed)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#checking for missing values\nis.na(cereal_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      Cereal Sodium Sugar  Type\n [1,]  FALSE  FALSE FALSE FALSE\n [2,]  FALSE  FALSE FALSE FALSE\n [3,]  FALSE  FALSE FALSE FALSE\n [4,]  FALSE  FALSE FALSE FALSE\n [5,]  FALSE  FALSE FALSE FALSE\n [6,]  FALSE  FALSE FALSE FALSE\n [7,]  FALSE  FALSE FALSE FALSE\n [8,]  FALSE  FALSE FALSE FALSE\n [9,]  FALSE  FALSE FALSE FALSE\n[10,]  FALSE  FALSE FALSE FALSE\n[11,]  FALSE  FALSE FALSE FALSE\n[12,]  FALSE  FALSE FALSE FALSE\n[13,]  FALSE  FALSE FALSE FALSE\n[14,]  FALSE  FALSE FALSE FALSE\n[15,]  FALSE  FALSE FALSE FALSE\n[16,]  FALSE  FALSE FALSE FALSE\n[17,]  FALSE  FALSE FALSE FALSE\n[18,]  FALSE  FALSE FALSE FALSE\n[19,]  FALSE  FALSE FALSE FALSE\n[20,]  FALSE  FALSE FALSE FALSE\n```\n:::\n:::\n\n\nRunning the function above shows that there are no missing values in this data set. This data is already tidy. \n\n## Univariate Visualizations\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Geo_Col\nggplot(cereal_data, aes(x= Sugar , y=Cereal,)) + \n    geom_col(fill= \"mediumturquoise\",\n             color= \"black\")\n```\n\n::: {.cell-output-display}\n![](Challenge5_TenzinLatoe_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nUsing the ggplot() fuction, I did a simple bar graph to illustrate the sugars per serving for each type of cereal. This illustrated that Raisan Bran has the highest, while Fiber One was the lowest. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Geom_boxplot\nggplot(cereal_data, aes(fill= Type, y=Sodium, x=Type)) + \n    geom_boxplot()+guides(fill='none')\n```\n\n::: {.cell-output-display}\n![](Challenge5_TenzinLatoe_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\nNext, the box plot illustrates how the distribution of the quantities of sodium in the data set varies based on the two different types of cereals:A or C. \n\n## Bivariate Visualization(s)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Geom_point \n\nggplot(cereal_data, aes(x= Sugar , y=Sodium,\n                        col=Type)) + \n    geom_point()+geom_smooth(se=FALSE)\n```\n\n::: {.cell-output-display}\n![](Challenge5_TenzinLatoe_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\nScatter plot used to display sodium and sugar per cereal type to show the relationship between them, and smoothed to provide an estimate of the trend between the two variables. \n\n",
    "supporting": [
      "Challenge5_TenzinLatoe_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}