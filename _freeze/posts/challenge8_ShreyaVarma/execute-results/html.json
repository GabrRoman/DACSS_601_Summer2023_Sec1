{
  "hash": "efcedbd0e7381ec26573968431ada40f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8 Solution\"\nauthor: \"Shreya Varma\"\ndescription: \"Joining Data\"\ndate: \"7/10/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - railroads\n  - snl\n  - faostat\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors <- read.csv(\"_data/snl_actors.csv\")\nhead(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n             aid           url  type  gender\n1  Kate McKinnon   /Cast/?KaMc  cast  female\n2    Alex Moffat   /Cast/?AlMo  cast    male\n3     Ego Nwodim   /Cast/?EgNw  cast unknown\n4     Chris Redd   /Cast/?ChRe  cast    male\n5 Kenan Thompson   /Cast/?KeTh  cast    male\n6 Carey Mulligan /Guests/?3677 guest    andy\n```\n:::\n\n```{.r .cell-code}\ndim(actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306    4\n```\n:::\n\n```{.r .cell-code}\nseasons <- read.csv(\"_data/snl_seasons.csv\")\nhead(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  sid year first_epid last_epid n_episodes\n1   1 1975   19751011  19760731         24\n2   2 1976   19760918  19770521         22\n3   3 1977   19770924  19780520         20\n4   4 1978   19781007  19790526         20\n5   5 1979   19791013  19800524         20\n6   6 1980   19801115  19810411         13\n```\n:::\n\n```{.r .cell-code}\ndim(seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46  5\n```\n:::\n\n```{.r .cell-code}\ncasts <- read.csv(\"_data/snl_casts.csv\")\nhead(casts, 20)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n                aid sid featured first_epid last_epid update_anchor n_episodes\n1  A. Whitney Brown  11     True   19860222        NA         False          8\n2  A. Whitney Brown  12     True         NA        NA         False         20\n3  A. Whitney Brown  13     True         NA        NA         False         13\n4  A. Whitney Brown  14     True         NA        NA         False         20\n5  A. Whitney Brown  15     True         NA        NA         False         20\n6  A. Whitney Brown  16     True         NA        NA         False         20\n7      Alan Zweibel   5     True   19800409        NA         False          5\n8    Sasheer Zamata  39     True   20140118        NA         False         11\n9    Sasheer Zamata  40     True         NA        NA         False         21\n10   Sasheer Zamata  41    False         NA        NA         False         21\n11   Sasheer Zamata  42    False         NA        NA         False         21\n12       Bowen Yang  45     True         NA        NA         False         18\n13       Bowen Yang  46     True         NA        NA         False         17\n14        Fred Wolf  21     True         NA        NA         False         20\n15        Fred Wolf  22     True         NA  19961019         False          3\n16     Casey Wilson  33     True   20080223        NA         False          8\n17     Casey Wilson  34     True         NA        NA         False         22\n18     Kristen Wiig  31     True   20051112        NA         False         15\n19     Kristen Wiig  32    False         NA        NA         False         20\n20     Kristen Wiig  33    False         NA        NA         False         12\n   season_fraction\n1        0.4444444\n2        1.0000000\n3        1.0000000\n4        1.0000000\n5        1.0000000\n6        1.0000000\n7        0.2500000\n8        0.5238095\n9        1.0000000\n10       1.0000000\n11       1.0000000\n12       1.0000000\n13       1.0000000\n14       1.0000000\n15       0.1500000\n16       0.6666667\n17       1.0000000\n18       0.7894737\n19       1.0000000\n20       1.0000000\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nI chose the SNL dataset. It has three files described as below:\n1. Actor:  It contains the details of the actors who worked with SNL. There are 4 columns where the column ‘aid’ represents the name of the person, ‘url’ refers to the url associated to the aid and two other columns type and gender which talks about how the aid is associated and the gender of the aid respectively. The show featured 2306 actors in total.\n2. Seasons: It contains the details of all season of SNL. The date first and last episodes were released and the number of episodes in each season. sid contains the season number. This show had 46 seasons.\n3. Casts: This contains the data of actor , the season in which they were featured and episode details.    \n\n## Tidy Data (as needed)\n\nI will check for null values in any of the datasets since null values inflate rows in case of joins. The first episode and last episode id  contains some null values. However we will not be using these columns to make any joins thus we can ignore them.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolSums(is.na(actors))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n   aid    url   type gender \n     0      0      0      0 \n```\n:::\n\n```{.r .cell-code}\ncolSums(is.na(seasons))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n       sid       year first_epid  last_epid n_episodes \n         0          0          0          0          0 \n```\n:::\n\n```{.r .cell-code}\ncolSums(is.na(casts))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n            aid             sid        featured      first_epid       last_epid \n              0               0               0             564             597 \n  update_anchor      n_episodes season_fraction \n              0               0               0 \n```\n:::\n:::\n\n\n## Join Data\n\nI will join the actors, casts and season data to plot the distribution of male and female actors over the seasons to see if there is any bias as is claimed with regards to SNL.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nactors_casts <- actors %>% inner_join(casts, by=\"aid\")\n\nactors_casts_seasons <- actors_casts %>% inner_join(seasons, by=\"sid\")\n```\n:::\n\n\n## Data Visualization\n\nWe can see that there is a bias between the female and male actors who appear on SNL.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nseasons_gender <- actors_casts_seasons %>% \n  select(sid, gender)\n\nseasons_gender <- seasons_gender %>% group_by(sid, gender) %>% summarise(count = n())\n\n# Create the line plot\nggplot(seasons_gender, aes(x = sid, y = count, group = gender, color = gender)) +\n  geom_line() +\n  labs(title = \"Gender of Actors across seasons\",x = \"Seasons\", y = \"Count\", color = \"Gender\") \n```\n\n::: {.cell-output-display}\n![](challenge8_ShreyaVarma_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge8_ShreyaVarma_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}