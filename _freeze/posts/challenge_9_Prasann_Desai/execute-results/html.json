{
  "hash": "0b202c8a69719dc44d06922c7e0022cb",
  "result": {
    "markdown": "---\ntitle: \"Challenge 9\"\nauthor: \"Prasann Desai\"\ndescription: \"Creating a function\"\ndate: \"7/3/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_9\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is simple. Create a function, and use it to perform a data analysis / cleaning / visualization task:\n\nExamples of such functions are:\n1) A function that reads in and cleans a dataset.  \n2) A function that computes summary statistics (e.g., computes the z score for a variable).  \n3) A function that plots a histogram.  \n\nThat's it!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function call to read a csv file\ncereal_df <- read_csv(\"_data/cereal.csv\")\n```\n:::\n\n\n## Function to create a univariate Pie-Chart based on a categorical variable\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_pie_chart <- function(input_df, category_var, chart_title) {\n\n  # Mutating the dataset\n  split_by_type <- count(input_df, across(all_of(category_var))) %>% arrange(-n) %>% mutate(prop = round(-n*100/sum(n),1), lab.ypos = cumsum(prop) - 0.5*prop)\n  split_by_type$label <- paste0(round(-split_by_type$prop), \"%\")\n  \n  textsize = (10/nrow(split_by_type)) + 1\n\n  # Creating a pie chart\n  ggplot(split_by_type, \n       aes(x = 1,\n           y = prop,\n           fill = .data[[category_var]])) + \n  geom_bar(width = 1,\n           stat = \"identity\", \n           color = \"black\") +\n  geom_text(\n    aes(label=label), position = position_stack(vjust=0.5),\n            color = \"black\",\n            size = textsize) +\n  coord_polar(\"y\",\n              start = 0\n              ) +\n  theme_void() +\n  labs(title = chart_title)  \n  \n}\n```\n:::\n\n\n## Sample function calls on couple of datasets\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Example usage on Cereals datasets\nplot_pie_chart(cereal_df, \"Type\", \"Cereals by Type\")\n```\n\n::: {.cell-output-display}\n![](challenge_9_Prasann_Desai_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Another example on abc poll data\nabc_poll_2021 <- read_csv(\"_data/abc_poll_2021.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nabc_poll_2021 <- mutate(abc_poll_2021, is_hispanic = !str_detect(ppethm, \"Non-Hispanic\"), pprace = str_split(ppethm, \",\", simplify = TRUE)[,1])\nabc_poll_2021 <- mutate(abc_poll_2021, `Interview Consent` = case_when(str_detect(Contact, \"Yes\") ~ \"Yes\",\n                                                                     str_detect(Contact, \"No\") ~ \"No\"\n                                                                     ))\nabc_poll_2021 <- rename(abc_poll_2021, Race = pprace)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function call to visualize the split of Poll respondents by their response to the \"Interview consent\" question\nplot_pie_chart(abc_poll_2021, \"Interview Consent\", \"Poll Respondents' consent to be interviewed\")\n```\n\n::: {.cell-output-display}\n![](challenge_9_Prasann_Desai_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function call to visualize the split of Poll respondents by their race type\nplot_pie_chart(abc_poll_2021, \"Race\", \"Poll Respondents by Race\")\n```\n\n::: {.cell-output-display}\n![](challenge_9_Prasann_Desai_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge_9_Prasann_Desai_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}