{
  "hash": "ae8b76dd6f6edee814ec085faca0fbee",
  "result": {
    "markdown": "---\ntitle: \"Challenge 9 Post: Creating Functions for the Cereal Dataset\"\nauthor: \"Hunter Major\"\ndescription: \"Creating a function\"\ndate: \"7/5/2023\"\nformat:\n  html:\n    df-print: paged\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_9\n  - cereal\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is simple. Create a function, and use it to perform a data analysis / cleaning / visualization task:\n\nExamples of such functions are:\n1) A function that reads in and cleans a dataset.  \n2) A function that computes summary statistics (e.g., computes the z score for a variable).  \n3) A function that plots a histogram.  \n\nThat's it!\n\n## Solution\nFor Challenge 9, I am going to read in the cereal.csv dataset. Since cereal.csv is already meets the qualifications for being a tidy dataset, I'll aim to create the two latter functions described in the instructions--creating a function that computes the z-score for a variable and creating a function that plots a histogram.\n\n## Reading in the data\n\n::: {.cell}\n\n```{.r .cell-code}\n# Reading in cereal.csv\ncereal_1 <- read_csv(\"_data/cereal.csv\")\ncereal_1\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"Cereal\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Sodium\"],\"name\":[2],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sugar\"],\"name\":[3],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Type\"],\"name\":[4],\"type\":[\"chr\"],\"align\":[\"left\"]}],\"data\":[{\"1\":\"Frosted Mini Wheats\",\"2\":\"0\",\"3\":\"11\",\"4\":\"A\"},{\"1\":\"Raisin Bran\",\"2\":\"340\",\"3\":\"18\",\"4\":\"A\"},{\"1\":\"All Bran\",\"2\":\"70\",\"3\":\"5\",\"4\":\"A\"},{\"1\":\"Apple Jacks\",\"2\":\"140\",\"3\":\"14\",\"4\":\"C\"},{\"1\":\"Captain Crunch\",\"2\":\"200\",\"3\":\"12\",\"4\":\"C\"},{\"1\":\"Cheerios\",\"2\":\"180\",\"3\":\"1\",\"4\":\"C\"},{\"1\":\"Cinnamon Toast Crunch\",\"2\":\"210\",\"3\":\"10\",\"4\":\"C\"},{\"1\":\"Crackling Oat Bran\",\"2\":\"150\",\"3\":\"16\",\"4\":\"A\"},{\"1\":\"Fiber One\",\"2\":\"100\",\"3\":\"0\",\"4\":\"A\"},{\"1\":\"Frosted Flakes\",\"2\":\"130\",\"3\":\"12\",\"4\":\"C\"},{\"1\":\"Froot Loops\",\"2\":\"140\",\"3\":\"14\",\"4\":\"C\"},{\"1\":\"Honey Bunches of Oats\",\"2\":\"180\",\"3\":\"7\",\"4\":\"A\"},{\"1\":\"Honey Nut Cheerios\",\"2\":\"190\",\"3\":\"9\",\"4\":\"C\"},{\"1\":\"Life\",\"2\":\"160\",\"3\":\"6\",\"4\":\"C\"},{\"1\":\"Rice Krispies\",\"2\":\"290\",\"3\":\"3\",\"4\":\"C\"},{\"1\":\"Honey Smacks\",\"2\":\"50\",\"3\":\"15\",\"4\":\"A\"},{\"1\":\"Special K\",\"2\":\"220\",\"3\":\"4\",\"4\":\"A\"},{\"1\":\"Wheaties\",\"2\":\"180\",\"3\":\"4\",\"4\":\"A\"},{\"1\":\"Corn Flakes\",\"2\":\"200\",\"3\":\"3\",\"4\":\"A\"},{\"1\":\"Honeycomb\",\"2\":\"210\",\"3\":\"11\",\"4\":\"C\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n\n## Creating function, calculate_z_score, to compute z-scores for Sodium and Sugar variables\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating function to compute z-scores\ncalculate_z_score <- function(col_name) {\n  z_score <- (col_name - mean(col_name)) / sd(col_name)\n  return(z_score)\n}\n\n# Using z-score function for Sodium variable in cereal_1 dataset\ncalculate_z_score(cereal_1$Sodium)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] -2.16146621  2.23912368 -1.25546241 -0.34945861  0.42711608  0.16825785\n [7]  0.55654519 -0.22002949 -0.86717507 -0.47888772 -0.34945861  0.16825785\n[13]  0.29768696 -0.09060038  1.59197810 -1.51432064  0.68597431  0.16825785\n[19]  0.42711608  0.55654519\n```\n:::\n\n```{.r .cell-code}\n# Using z-score function for Sugar variable in cereal_1 dataset\ncalculate_z_score(cereal_1$Sugar)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1]  0.42293060  1.73871469 -0.70488433  0.98683807  0.61089976 -1.45676096\n [7]  0.23496144  1.36277638 -1.64473011  0.61089976  0.98683807 -0.32894602\n[13]  0.04699229 -0.51691518 -1.08082265  1.17480722 -0.89285349 -0.89285349\n[19] -1.08082265  0.42293060\n```\n:::\n:::\n\n\n## Creating function, build_histogram, to make histograms for the Sodium variable\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating a function, build_histogram, to make a histogram\nbuild_histogram <- function(data, col_name, title, fill=\"orange\", xlab=\"x\", ylab= \"Frequency\", x_max= 350, y_max= 4) {\n  data %>%\n    ggplot(aes({{col_name}})) + geom_histogram(fill= fill)+ labs(x=xlab, y=ylab, title= title) + xlim(0,x_max)+ ylim(0,y_max)\n}\n\n# Using histogram function for Sodium variable in cereal_1 dataset\nbuild_histogram(cereal_1, Sodium, \"Histogram of Sodium Content in Cereals\", xlab = \"Sodium content(mg)\", ylab = \"Frequency\")\n```\n\n::: {.cell-output-display}\n![](challenge9_huntermajor_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge9_huntermajor_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}