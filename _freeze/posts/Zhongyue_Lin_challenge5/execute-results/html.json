{
  "hash": "3d7d9e485f6c1fc5bdd886763c79b53d",
  "result": {
    "markdown": "---\ntitle: \"Challenge 5 \"\nauthor: \"Zhongyue Lin\"\ndescription: \"Introduction to Visualization\"\ndate: \"6/14/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_5\n  - railroads\n  - cereal\n  - air_bnb\n  - pathogen_cost\n  - australian_marriage\n  - public_schools\n  - usa_households\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least two univariate visualizations\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n5)  Create at least one bivariate visualization\n   - try to make them \"publication\" ready\n   - Explain why you choose the specific graph type\n\n\n\n## Read in data\n\n-   Public School Characteristics ⭐⭐⭐⭐ \n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- readr::read_csv(\"_data/Public_School_Characteristics_2017-18.csv\")\nhead(data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 79\n      X     Y OBJEC…¹ NCESSCH NMCNTY SURVY…² STABR LEAID ST_LE…³ LEA_N…⁴ SCH_N…⁵\n  <dbl> <dbl>   <dbl> <chr>   <chr>  <chr>   <chr> <chr> <chr>   <chr>   <chr>  \n1 -149.  61.6       1 020051… Matan… 2017-2… AK    0200… AK-33   Matanu… John S…\n2 -157.  71.3       2 020061… North… 2017-2… AK    0200… AK-36   North … Kiita …\n3 -151.  60.5       3 020039… Kenai… 2017-2… AK    0200… AK-24   Kenai … Soldot…\n4 -151.  60.6       4 020039… Kenai… 2017-2… AK    0200… AK-24   Kenai … Kaleid…\n5 -151.  60.6       5 020039… Kenai… 2017-2… AK    0200… AK-24   Kenai … Marath…\n6 -133.  56.1       6 020070… Princ… 2017-2… AK    0200… AK-44   Southe… Whale …\n# … with 68 more variables: LSTREET1 <chr>, LSTREET2 <chr>, LSTREET3 <lgl>,\n#   LCITY <chr>, LSTATE <chr>, LZIP <chr>, LZIP4 <chr>, PHONE <chr>,\n#   GSLO <chr>, GSHI <chr>, VIRTUAL <chr>, TOTFRL <dbl>, FRELCH <dbl>,\n#   REDLCH <dbl>, PK <dbl>, KG <dbl>, G01 <dbl>, G02 <dbl>, G03 <dbl>,\n#   G04 <dbl>, G05 <dbl>, G06 <dbl>, G07 <dbl>, G08 <dbl>, G09 <dbl>,\n#   G10 <dbl>, G11 <dbl>, G12 <dbl>, G13 <lgl>, TOTAL <dbl>, MEMBER <dbl>,\n#   AM <dbl>, HI <dbl>, BL <dbl>, WH <dbl>, HP <dbl>, TR <dbl>, FTE <dbl>, …\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThis dataset is a comprehensive collection of data pertaining to schools across the United States. It includes geographical information, student and teacher demographics, funding sources, and specific characteristics of each school. Key data points include the school's name, its physical address, number of students and teachers, student-to-teacher ratio, and the operational status of the school. Information about the school type, whether it's a regular, virtual, charter, or magnet school, is also included. The dataset serves as a valuable resource for analyzing and understanding the diverse facets of the U.S. education system.\n\n## Tidy Data (as needed)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n### Delete empty columns\ndata <- data %>%\n  select(-LSTREET2, -LSTREET3,-LZIP4,-UG,\n-AE)\n\ntidy_data <- data %>%\n  pivot_longer(cols = c('PK', 'KG', 'G01', 'G02', 'G03', 'G04', 'G05', 'G06', 'G07', 'G08', 'G09', 'G10', 'G11', 'G12', 'G13'), \n               names_to = \"Grade\", \n               values_to = \"Student_Count\")\n\nhead(tidy_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 61\n      X     Y OBJEC…¹ NCESSCH NMCNTY SURVY…² STABR LEAID ST_LE…³ LEA_N…⁴ SCH_N…⁵\n  <dbl> <dbl>   <dbl> <chr>   <chr>  <chr>   <chr> <chr> <chr>   <chr>   <chr>  \n1 -149.  61.6       1 020051… Matan… 2017-2… AK    0200… AK-33   Matanu… John S…\n2 -149.  61.6       1 020051… Matan… 2017-2… AK    0200… AK-33   Matanu… John S…\n3 -149.  61.6       1 020051… Matan… 2017-2… AK    0200… AK-33   Matanu… John S…\n4 -149.  61.6       1 020051… Matan… 2017-2… AK    0200… AK-33   Matanu… John S…\n5 -149.  61.6       1 020051… Matan… 2017-2… AK    0200… AK-33   Matanu… John S…\n6 -149.  61.6       1 020051… Matan… 2017-2… AK    0200… AK-33   Matanu… John S…\n# … with 50 more variables: LSTREET1 <chr>, LCITY <chr>, LSTATE <chr>,\n#   LZIP <chr>, PHONE <chr>, GSLO <chr>, GSHI <chr>, VIRTUAL <chr>,\n#   TOTFRL <dbl>, FRELCH <dbl>, REDLCH <dbl>, TOTAL <dbl>, MEMBER <dbl>,\n#   AM <dbl>, HI <dbl>, BL <dbl>, WH <dbl>, HP <dbl>, TR <dbl>, FTE <dbl>,\n#   LATCOD <dbl>, LONCOD <dbl>, ULOCALE <chr>, STUTERATIO <dbl>, STITLEI <chr>,\n#   AMALM <dbl>, AMALF <dbl>, ASALM <dbl>, ASALF <dbl>, HIALM <dbl>,\n#   HIALF <dbl>, BLALM <dbl>, BLALF <dbl>, WHALM <dbl>, WHALF <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Factorization of individual variables\ntidy_data$STABR <- factor(tidy_data$STABR)\ntidy_data$SURVYEAR <- factor(tidy_data$SURVYEAR)\ntidy_data$VIRTUAL <- factor(tidy_data$VIRTUAL)\ntidy_data$SCHOOL_TYPE_TEXT <- factor(tidy_data$SCHOOL_TYPE_TEXT)\ntidy_data$SCHOOL_LEVEL <- factor(tidy_data$SCHOOL_LEVEL)\ntidy_data$CHARTER_TEXT <- factor(tidy_data$CHARTER_TEXT)\ntidy_data$MAGNET_TEXT <- factor(tidy_data$MAGNET_TEXT)\ntidy_data$STATUS <- factor(tidy_data$STATUS)\ntidy_data$SY_STATUS_TEXT <- factor(tidy_data$SY_STATUS_TEXT)\n\n# View factor levels\nlevels(tidy_data$STABR)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"AK\" \"AL\" \"AR\" \"AS\" \"AZ\" \"BI\" \"CA\" \"CO\" \"CT\" \"DC\" \"DE\" \"FL\" \"GA\" \"GU\" \"HI\"\n[16] \"IA\" \"ID\" \"IL\" \"IN\" \"KS\" \"KY\" \"LA\" \"MA\" \"MD\" \"ME\" \"MI\" \"MN\" \"MO\" \"MS\" \"MT\"\n[31] \"NC\" \"ND\" \"NE\" \"NH\" \"NJ\" \"NM\" \"NV\" \"NY\" \"OH\" \"OK\" \"OR\" \"PA\" \"PR\" \"RI\" \"SC\"\n[46] \"SD\" \"TN\" \"TX\" \"UT\" \"VA\" \"VI\" \"VT\" \"WA\" \"WI\" \"WV\" \"WY\"\n```\n:::\n:::\n\nI have chosen to factorize these variables as they represent categorical information. Variables like 'STABR', 'SURVYEAR', 'VIRTUAL', 'SCHOOL_TYPE_TEXT', 'SCHOOL_LEVEL', 'CHARTER_TEXT', 'MAGNET_TEXT', 'STATUS', and 'SY_STATUS_TEXT' are categories rather than continuous numbers. By converting these into factors, I am enabling R to treat them as categorical data, allowing for more accurate analysis and visualization. For example, 'STABR' is the abbreviation for states, which are distinct entities and should not be treated as numerical data. Similarly, 'SURVYEAR', though numeric, is categorical as I don't perform arithmetic operations on it. The rest represent different aspects of the school system and are binary or categorical in nature. By treating these as factors, I am able to represent the data's properties more accurately.\n## Univariate Visualizations\n### TOTAL\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(tidy_data, aes(x = TOTAL)) +\n  geom_histogram(binwidth = 0.1, fill = 'blue', color = 'black') +\n  scale_x_log10() +\n  xlab('Total Students (Log Scale)') +\n  ylab('Count') +\n  ggtitle('Distribution of Total Students (Log Scale)')\n```\n\n::: {.cell-output-display}\n![](Zhongyue_Lin_challenge5_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\nThis code produces a histogram that visualizes the distribution of total students at each school, but with a twist: it uses a logarithmic scale on the x-axis. The `geom_histogram()` function creates the histogram, and the `binwidth = 0.1` argument sets the width of each bin in the histogram. The `scale_x_log10()` function transforms the x-axis to a log scale, which can make the plot easier to read and interpret when the data spans several orders of magnitude. The 'fill' and 'color' arguments in `geom_histogram()` set the color of the bars and their outline. Finally, `xlab()`, `ylab()`, and `ggtitle()` are used to label the x-axis, y-axis, and the plot title respectively.\n### SCHOOL_TYPE_TEXT\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(SCHOOL_TYPE_TEXT)) +\n  geom_bar(fill = 'blue', color = 'black') +\n  xlab('School Type') +\n  ylab('Count') +\n  ggtitle('Count of School Types') +\n  coord_flip()  # Flips the axes for easier reading\n```\n\n::: {.cell-output-display}\n![](Zhongyue_Lin_challenge5_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\nThis code generates a bar chart that shows the count of different school types, as indicated by the `SCHOOL_TYPE_TEXT` field. The `geom_bar()` function creates the bar chart. The colors of the bars and their borders are set to blue and black respectively, as specified by the `fill = 'blue', color = 'black'` arguments. The labels for the x-axis and y-axis are set by `xlab('School Type')` and `ylab('Count')`, and the title of the plot is set by `ggtitle('Count of School Types')`. Finally, `coord_flip()` is used to flip the axes for easier reading. This is especially useful when the x-axis labels are text that would otherwise be displayed vertically and potentially overlap, making them difficult to read.\n### Location\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the number of breaks you want on each axis\nnum_breaks <- 5\n\n# Generate pretty breaks for x and y axis\nx_breaks <- pretty(tidy_data$LONCOD, n = num_breaks)\ny_breaks <- pretty(tidy_data$LATCOD, n = num_breaks)\n\n# Create hexbin plot with coarser scale\nggplot(tidy_data, aes(x = LONCOD, y = LATCOD)) +\n  geom_hex(bins = 40) +\n  scale_fill_gradient(low = \"white\", high = \"red\") +\n  scale_x_continuous(breaks = x_breaks) +\n  scale_y_continuous(breaks = y_breaks) +\n  xlab('Longitude') +\n  ylab('Latitude') +\n  ggtitle('Hexbin Plot of School Locations')\n```\n\n::: {.cell-output-display}\n![](Zhongyue_Lin_challenge5_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\nThis code generates a hexbin plot for school locations based on longitude and latitude. It helps overcome the issue of overplotting in scatter or bubble plots when dealing with large data sets. The plot is divided into hexagonal bins, with colors indicating the number of observations in each bin. The `pretty()` function is used to create user-friendly axis breaks.\n\nWhy did I choose a hexbin plot instead of a scatter plot or bubble plot for visualization? When dealing with a large number of data points distributed across a geographic space, scatter plots and bubble plots can suffer from overplotting, which makes it challenging to accurately perceive the number of observations in each area. In contrast, a hexbin plot divides the spatial area into numerous hexagons and uses color intensity within these hexagons to represent the number of observations. This approach effectively handles overplotting and excessive data points, making the visualization easier to comprehend.\n\n\n## Bivariate Visualization(s)\n\n### STUTERATIO-TOTFRL\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = STUTERATIO, y = TOTFRL)) +\n  geom_hex() +\n  xlab('Student-Teacher Ratio') +\n  ylab('Number of Students with Free/Reduced Lunch') +\n  ggtitle('Student-Teacher Ratio vs. Number of Students with Free/Reduced Lunch')\n```\n\n::: {.cell-output-display}\n![](Zhongyue_Lin_challenge5_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\nThis code generates a hexbin plot to visualize the relationship between the student-teacher ratio and the number of students receiving free or reduced lunch. By using `geom_hex()`, it avoids the problem of point overlap in scatter plots. The depth of color indicates data density, helping me better understand the distribution of the data.\n\n### SCHOOL_TYPE_TEXT-STUTERATIO\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes(x = SCHOOL_TYPE_TEXT, y = STUTERATIO)) +\n  geom_boxplot(aes(fill = SCHOOL_TYPE_TEXT), color = 'black', alpha = 0.3) +\n  geom_jitter(width = 0.2, size = 1, alpha = 0.1) +\n  scale_fill_brewer(palette = \"Set1\") +\n  theme_minimal() +\n  xlab('School Type') +\n  ylab('Student-Teacher Ratio') +\n  ggtitle('Student-Teacher Ratio by School Type') +\n  coord_flip() +  # Flips the axes for easier reading\n  coord_cartesian(ylim = c(0, 3000)) +  # Sets the y-axis limits\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))  # Tilts the x-axis labels\n```\n\n::: {.cell-output-display}\n![](Zhongyue_Lin_challenge5_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\nIn this code, I'm creating a combined box plot and jitter plot of student-teacher ratios across school types. Box plots reveal data quartiles and potential outliers, while jitter plots provide a more detailed distribution. The box plots are color-coded by school type for clarity, with an alpha transparency of 0.3 to keep overlaid jitter points visible. \n\nJitter points have a specified width, size, and alpha transparency for clarity without clutter. The color palette used is distinguishable by most, including color-blind individuals. \n\nWe're using a minimalistic theme for clarity, flipping the axes for readability, limiting the y-axis to [0, 3000] to focus on the relevant data, and tilting x-axis labels to avoid overlap.",
    "supporting": [
      "Zhongyue_Lin_challenge5_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}