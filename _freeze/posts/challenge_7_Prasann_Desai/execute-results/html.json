{
  "hash": "fca62fa66f9d90f3186be4187cdfbf32",
  "result": {
    "markdown": "---\ntitle: \"Challenge 7\"\nauthor: \"Prasann Desai\"\ndescription: \"Visualizing Multiple Dimensions\"\ndate: \"7/2/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_7\n  - Prasann Desai\n  - eggs\n\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  Recreate at least two graphs from previous exercises, but introduce at least one additional dimension that you omitted before using ggplot functionality (color, shape, line, facet, etc) The goal is not to create unneeded [chart ink (Tufte)](https://www.edwardtufte.com/tufte/), but to concisely capture variation in additional dimensions that were collapsed in your earlier 2 or 3 dimensional graphs.\n   - Explain why you choose the specific graph type\n5) If you haven't tried in previous weeks, work this week to make your graphs \"publication\" ready with titles, captions, and pretty axis labels and other viewer-friendly features\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code. And anyone not familiar with Edward Tufte should check out his [fantastic books](https://www.edwardtufte.com/tufte/books_vdqi) and [courses on data visualizaton.](https://www.edwardtufte.com/tufte/courses)\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - eggs ⭐\n  - abc_poll ⭐⭐\n  - australian_marriage ⭐⭐\n  - hotel_bookings ⭐⭐⭐\n  - air_bnb  ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - faostat ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Function call to read a csv file\naus_marriage_df <- read_csv(\"_data/australian_marriage_tidy.csv\")\naus_marriage_df\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 16 × 4\n   territory                       resp    count percent\n   <chr>                           <chr>   <dbl>   <dbl>\n 1 New South Wales                 yes   2374362    57.8\n 2 New South Wales                 no    1736838    42.2\n 3 Victoria                        yes   2145629    64.9\n 4 Victoria                        no    1161098    35.1\n 5 Queensland                      yes   1487060    60.7\n 6 Queensland                      no     961015    39.3\n 7 South Australia                 yes    592528    62.5\n 8 South Australia                 no     356247    37.5\n 9 Western Australia               yes    801575    63.7\n10 Western Australia               no     455924    36.3\n11 Tasmania                        yes    191948    63.6\n12 Tasmania                        no     109655    36.4\n13 Northern Territory(b)           yes     48686    60.6\n14 Northern Territory(b)           no      31690    39.4\n15 Australian Capital Territory(c) yes    175459    74  \n16 Australian Capital Territory(c) no      61520    26  \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nResponse:\n\nFrom the above output, we can see that the dataset contains territory-wise split of % Australians who are married vs not married. In addition to the percentage split, it also contains the raw counts of people who are married vs not married.\n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nResponse: It appears to me that the data is already tidy. (Each variable has its own column, Each observation has its own row and Each value is in its own cell)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Sanity check for duplicate responses\nn_distinct(aus_marriage_df$territory, aus_marriage_df$resp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 16\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Check to see if the 'resp'-wise totals add up to 16\ntable(aus_marriage_df$resp)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n no yes \n  8   8 \n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# For better readability in the visualizations, I am adding a column that clearly describes the marriage status\naus_marriage_df <- mutate(aus_marriage_df, married = case_when(str_detect(resp, \"yes\") ~ \"Married\",\n                                                                     str_detect(resp, \"no\") ~ \"Not Married\"\n                                                                     ))\n```\n:::\n\n\n## Visualization with Multiple Dimensions\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(aus_marriage_df, aes(x = married, y = percent, fill = married)) +\n  geom_bar(size = 1, stat = \"identity\") +\n  facet_wrap(~territory) +\n  scale_fill_manual(values = c(\"Married\" = \"#7DCE82\",\n                               \"Not Married\" = \"#FF8360\")) +\n  labs(title = \"Territory-wise % Married population\",\n       subtitle = \"All 8 territories of Australia\",\n       x = \"Married (Yes/No)\",\n       y = \"Percentage\") +\n  geom_text(aes(label = paste0(percent,\"%\")),\n            color = \"black\",\n            size = 3,\n            vjust = 2\n            ) +\n  theme_linedraw()\n```\n\n::: {.cell-output-display}\n![](challenge_7_Prasann_Desai_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating a pie chart\nggplot(aus_marriage_df, \n       aes(x = \"\",\n           y = percent,\n           fill = married)) + \n  facet_wrap(~territory, ncol = 4) +\n  scale_fill_manual(values = c(\"Married\" = \"#8ACB88\",\n                               \"Not Married\" = \"#FFBF46\")) +\n  geom_bar(width = 1,\n           stat = \"identity\") +\n  geom_text(aes(label = paste0(round(percent),\"%\")),\n            color = \"black\",\n            size = 3\n            ) +\n  coord_polar(\"y\",\n              start = 0,\n              direction = -1\n              ) +\n  labs(title = \"Territory-wise % Married population\",\n       subtitle = \"All 8 territories of Australia\",\n       x = \"Married (Yes/No)\",\n       y = \"Percentage\") +\n  theme_void()\n```\n\n::: {.cell-output-display}\n![](challenge_7_Prasann_Desai_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::",
    "supporting": [
      "challenge_7_Prasann_Desai_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}