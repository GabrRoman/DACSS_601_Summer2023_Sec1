{
  "hash": "57175693dec06c53315b80006a5daf5f",
  "result": {
    "markdown": "---\ntitle: \"Challenge 10 Post: Using Purr with the Aninal Weight Data\"\nauthor: \"Hunter Major\"\ndescription: \"purrr\"\ndate: \"7/9/2023\"\nformat:\n  html:\n    df-print: paged\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_10\n---\n\n\n\n\n## Challenge Overview\n\nThe [purrr](https://purrr.tidyverse.org/) package is a powerful tool for functional programming. It allows the user to apply a single function across multiple objects. It can replace for loops with a more readable (and often faster) simple function call. \n\nFor example, we can draw `n` random samples from 10 different distributions using a vector of 10 means.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 100 # sample size\nm <- seq(1,10) # means \nsamps <- map(m,rnorm,n=n) \n```\n:::\n\n\nWe can then use `map_dbl` to verify that this worked correctly by computing the mean for each sample.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamps %>%\n  map_dbl(mean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] 1.165970 2.131546 3.081201 4.069321 4.910645 6.153407 6.957024 8.056468\n [9] 8.952136 9.954956\n```\n:::\n:::\n\n\n`purrr` is tricky to learn (but beyond useful once you get a handle on it). Therefore, it's imperative that you complete the `purr` and `map` readings before attempting this challenge.  \n\n## The challenge  \n\nUse `purrr` with a function to perform *some* data science task. What this task is is up to you. It could involve computing summary statistics, reading in multiple datasets, running a random process multiple times, or anything else you might need to do in your work as a data analyst. You might consider using `purrr` with a function you wrote for challenge 9.  \n\n## Reading in the Data\nFor this challenge, I am going to read in the animal_weight.csv dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nanimalweight1 <- read.csv(\"_data/animal_weight.csv\")\nanimalweight1\n```\n\n::: {.cell-output-display}\n`````{=html}\n<div data-pagedtable=\"false\">\n  <script data-pagedtable-source type=\"application/json\">\n{\"columns\":[{\"label\":[\"IPCC.Area\"],\"name\":[1],\"type\":[\"chr\"],\"align\":[\"left\"]},{\"label\":[\"Cattle...dairy\"],\"name\":[2],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Cattle...non.dairy\"],\"name\":[3],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Buffaloes\"],\"name\":[4],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Swine...market\"],\"name\":[5],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Swine...breeding\"],\"name\":[6],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Chicken...Broilers\"],\"name\":[7],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Chicken...Layers\"],\"name\":[8],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Ducks\"],\"name\":[9],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Turkeys\"],\"name\":[10],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Sheep\"],\"name\":[11],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Goats\"],\"name\":[12],\"type\":[\"dbl\"],\"align\":[\"right\"]},{\"label\":[\"Horses\"],\"name\":[13],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Asses\"],\"name\":[14],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Mules\"],\"name\":[15],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Camels\"],\"name\":[16],\"type\":[\"int\"],\"align\":[\"right\"]},{\"label\":[\"Llamas\"],\"name\":[17],\"type\":[\"int\"],\"align\":[\"right\"]}],\"data\":[{\"1\":\"Indian Subcontinent\",\"2\":\"275\",\"3\":\"110\",\"4\":\"295\",\"5\":\"28\",\"6\":\"28\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"28.0\",\"12\":\"30.0\",\"13\":\"238\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Eastern Europe\",\"2\":\"550\",\"3\":\"391\",\"4\":\"380\",\"5\":\"50\",\"6\":\"180\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"48.5\",\"12\":\"38.5\",\"13\":\"377\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Africa\",\"2\":\"275\",\"3\":\"173\",\"4\":\"380\",\"5\":\"28\",\"6\":\"28\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"28.0\",\"12\":\"30.0\",\"13\":\"238\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Oceania\",\"2\":\"500\",\"3\":\"330\",\"4\":\"380\",\"5\":\"45\",\"6\":\"180\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"48.5\",\"12\":\"38.5\",\"13\":\"377\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Western Europe\",\"2\":\"600\",\"3\":\"420\",\"4\":\"380\",\"5\":\"50\",\"6\":\"198\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"48.5\",\"12\":\"38.5\",\"13\":\"377\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Latin America\",\"2\":\"400\",\"3\":\"305\",\"4\":\"380\",\"5\":\"28\",\"6\":\"28\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"28.0\",\"12\":\"30.0\",\"13\":\"238\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Asia\",\"2\":\"350\",\"3\":\"391\",\"4\":\"380\",\"5\":\"50\",\"6\":\"180\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"48.5\",\"12\":\"38.5\",\"13\":\"377\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Middle east\",\"2\":\"275\",\"3\":\"173\",\"4\":\"380\",\"5\":\"28\",\"6\":\"28\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"28.0\",\"12\":\"30.0\",\"13\":\"238\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"},{\"1\":\"Northern America\",\"2\":\"604\",\"3\":\"389\",\"4\":\"380\",\"5\":\"46\",\"6\":\"198\",\"7\":\"0.9\",\"8\":\"1.8\",\"9\":\"2.7\",\"10\":\"6.8\",\"11\":\"48.5\",\"12\":\"38.5\",\"13\":\"377\",\"14\":\"130\",\"15\":\"130\",\"16\":\"217\",\"17\":\"217\"}],\"options\":{\"columns\":{\"min\":{},\"max\":[10]},\"rows\":{\"min\":[10],\"max\":[10]},\"pages\":{}}}\n  </script>\n</div>\n`````\n:::\n:::\n\n## Solution\nWe can split the animal weight dataset based on IPCC.Area, which would return 9 datasets for each of the 9 IPCC.Areas, which are large(r) global regions.\n\n::: {.cell}\n\n```{.r .cell-code}\nanimalweight2_area <- split(animalweight1, animalweight1$IPCC.Area)\nanimalweight2_area\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n$Africa\n  IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n3    Africa            275                173       380             28\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n3               28                0.9              1.8   2.7     6.8    28\n  Goats Horses Asses Mules Camels Llamas\n3    30    238   130   130    217    217\n\n$Asia\n  IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n7      Asia            350                391       380             50\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n7              180                0.9              1.8   2.7     6.8  48.5\n  Goats Horses Asses Mules Camels Llamas\n7  38.5    377   130   130    217    217\n\n$`Eastern Europe`\n       IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n2 Eastern Europe            550                391       380             50\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n2              180                0.9              1.8   2.7     6.8  48.5\n  Goats Horses Asses Mules Camels Llamas\n2  38.5    377   130   130    217    217\n\n$`Indian Subcontinent`\n            IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes\n1 Indian Subcontinent            275                110       295\n  Swine...market Swine...breeding Chicken...Broilers Chicken...Layers Ducks\n1             28               28                0.9              1.8   2.7\n  Turkeys Sheep Goats Horses Asses Mules Camels Llamas\n1     6.8    28    30    238   130   130    217    217\n\n$`Latin America`\n      IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n6 Latin America            400                305       380             28\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n6               28                0.9              1.8   2.7     6.8    28\n  Goats Horses Asses Mules Camels Llamas\n6    30    238   130   130    217    217\n\n$`Middle east`\n    IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n8 Middle east            275                173       380             28\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n8               28                0.9              1.8   2.7     6.8    28\n  Goats Horses Asses Mules Camels Llamas\n8    30    238   130   130    217    217\n\n$`Northern America`\n         IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n9 Northern America            604                389       380             46\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n9              198                0.9              1.8   2.7     6.8  48.5\n  Goats Horses Asses Mules Camels Llamas\n9  38.5    377   130   130    217    217\n\n$Oceania\n  IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n4   Oceania            500                330       380             45\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n4              180                0.9              1.8   2.7     6.8  48.5\n  Goats Horses Asses Mules Camels Llamas\n4  38.5    377   130   130    217    217\n\n$`Western Europe`\n       IPCC.Area Cattle...dairy Cattle...non.dairy Buffaloes Swine...market\n5 Western Europe            600                420       380             50\n  Swine...breeding Chicken...Broilers Chicken...Layers Ducks Turkeys Sheep\n5              198                0.9              1.8   2.7     6.8  48.5\n  Goats Horses Asses Mules Camels Llamas\n5  38.5    377   130   130    217    217\n```\n:::\n:::\n\n\nIn Challenge 9, I created a function that could build a histogram for a variable which I will rework with slight adjustments below, this time using purr's map () to help visualize the histograms for Cattle (dairy and non-dairy), Swine (market and breeding), Buffaloes, Sheep, Turkeys, Ducks, Horses, Goats, and Llamas.\n## Function for Histogram\n\n::: {.cell}\n\n```{.r .cell-code}\n# Creating a function, build_histogram, to make a histogram\nbuild_histogram <- function(data, col_name, title, fill=\"orange\", xlab=\"x\", ylab= \"n\") {\n  col_name <- rlang::ensym(col_name)\n  data %>%\n    ggplot(aes({{col_name}})) + geom_histogram(fill= fill)+ labs(x=col_name, y=ylab)\n}\n```\n:::\n\n\n## Building Histogram\n\n::: {.cell}\n\n```{.r .cell-code}\n# building the histogram using map()\nmap(c(\"Cattle...dairy\", \"Cattle...non.dairy\", \"Buffaloes\", \"Swine...market\", \"Swine...breeding\", \"Sheep\", \"Turkeys\", \"Ducks\", \"Goats\", \"Horses\", \"Llamas\"), ~build_histogram(dat=animalweight1, col_name=!!.x))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[2]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-2.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[3]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-3.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[4]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-4.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[5]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-5.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[6]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-6.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[7]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-7.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[8]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-8.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[9]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-9.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[10]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-10.png){width=672}\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n\n[[11]]\n```\n:::\n\n::: {.cell-output-display}\n![](challenge10_huntermajor_files/figure-html/unnamed-chunk-7-11.png){width=672}\n:::\n:::\n",
    "supporting": [
      "challenge10_huntermajor_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}