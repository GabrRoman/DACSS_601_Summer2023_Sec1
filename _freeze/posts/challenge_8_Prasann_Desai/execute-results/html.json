{
  "hash": "d945c8406c4adc2473ca14178741b39e",
  "result": {
    "markdown": "---\ntitle: \"Challenge 8\"\nauthor: \"Prasann Desai\"\ndescription: \"Joining Data\"\ndate: \"7/3/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_8\n  - Prasann Desai\n  - snl\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(lubridate)\nlibrary(scales)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in multiple data sets, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  join two or more data sets and analyze some aspect of the joined data\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - military marriages ⭐⭐\n  - faostat ⭐⭐\n  - railroads  ⭐⭐⭐\n  - fed_rate ⭐⭐⭐\n  - debt ⭐⭐⭐\n  - us_hh ⭐⭐⭐⭐\n  - snl ⭐⭐⭐⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_seasons <- read_csv('_data/snl_seasons.csv')\nsnl_actors <- read_csv('_data/snl_actors.csv')\nsnl_casts <- read_csv('_data/snl_casts.csv')\n```\n:::\n\n## Previewing the datasets\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# snl_casts\nnrow(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 614\n```\n:::\n\n```{.r .cell-code}\nhead(snl_casts)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 8\n  aid                sid featured first_epid last_epid update_…¹ n_epi…² seaso…³\n  <chr>            <dbl> <lgl>         <dbl>     <dbl> <lgl>       <dbl>   <dbl>\n1 A. Whitney Brown    11 TRUE       19860222        NA FALSE           8   0.444\n2 A. Whitney Brown    12 TRUE             NA        NA FALSE          20   1    \n3 A. Whitney Brown    13 TRUE             NA        NA FALSE          13   1    \n4 A. Whitney Brown    14 TRUE             NA        NA FALSE          20   1    \n5 A. Whitney Brown    15 TRUE             NA        NA FALSE          20   1    \n6 A. Whitney Brown    16 TRUE             NA        NA FALSE          20   1    \n# … with abbreviated variable names ¹​update_anchor, ²​n_episodes,\n#   ³​season_fraction\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# snl_seasons\nnrow(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 46\n```\n:::\n\n```{.r .cell-code}\nhead(snl_seasons)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 5\n    sid  year first_epid last_epid n_episodes\n  <dbl> <dbl>      <dbl>     <dbl>      <dbl>\n1     1  1975   19751011  19760731         24\n2     2  1976   19760918  19770521         22\n3     3  1977   19770924  19780520         20\n4     4  1978   19781007  19790526         20\n5     5  1979   19791013  19800524         20\n6     6  1980   19801115  19810411         13\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# snl_actors\nnrow(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 2306\n```\n:::\n\n```{.r .cell-code}\nhead(snl_actors)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 4\n  aid            url           type  gender \n  <chr>          <chr>         <chr> <chr>  \n1 Kate McKinnon  /Cast/?KaMc   cast  female \n2 Alex Moffat    /Cast/?AlMo   cast  male   \n3 Ego Nwodim     /Cast/?EgNw   cast  unknown\n4 Chris Redd     /Cast/?ChRe   cast  male   \n5 Kenan Thompson /Cast/?KeTh   cast  male   \n6 Carey Mulligan /Guests/?3677 guest andy   \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nFrom the above outputs, we can see that the dataset contains 3 tables related to the popular show (SNL- Saturday Night Live).\n- snl_actors contains a list of actors who appeared on SNL with a few characterstics about them like their url, gender and whether they were a cast/guest/crew/unknown member on SNL.\n- snl_seasons contains a list of SNL seasons and basic information about it like first/last episode ids, num of episodes and year of the SNL season.\n- snl_casts contains the details of actors that featured in every season of SNL and their stats like num of episodes they were part of, their first/last episode ids, etc. \n\n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\nResponse: Overall, all the 3 tables look tidy.\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(snl_actors$gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n   andy  female    male unknown \n     21     671    1226     388 \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# SNL actors dataset contains 'andy' gender. It would be a good idea to replace these instances with 'unknown'.\nsnl_actors <- mutate(snl_actors, gender = case_when(str_detect(gender, \"andy\") ~ \"unknown\",\n                                                    str_equal(gender, \"female\") ~ \"female\",\n                                                    str_equal(gender, \"male\") ~ \"male\",\n                                                    TRUE ~ as.character(gender)\n                                                    ))\n# Sanity check of the fix\ntable(snl_actors$gender)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n\n female    male unknown \n    671    1226     409 \n```\n:::\n:::\n\n\n## Join Data\n\nBe sure to include a sanity check, and double-check that case count is correct!\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Joining the snl_casts and snl_actors on \"aid\" column\nsnl_ca <- left_join(snl_casts, snl_actors, by = \"aid\")\nsnl_ca\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 11\n   aid           sid featu…¹ first…² last_…³ updat…⁴ n_epi…⁵ seaso…⁶ url   type \n   <chr>       <dbl> <lgl>     <dbl>   <dbl> <lgl>     <dbl>   <dbl> <chr> <chr>\n 1 A. Whitney…    11 TRUE     1.99e7      NA FALSE         8   0.444 /Cas… cast \n 2 A. Whitney…    12 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 3 A. Whitney…    13 TRUE    NA           NA FALSE        13   1     /Cas… cast \n 4 A. Whitney…    14 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 5 A. Whitney…    15 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 6 A. Whitney…    16 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 7 Alan Zweib…     5 TRUE     1.98e7      NA FALSE         5   0.25  /Cas… cast \n 8 Sasheer Za…    39 TRUE     2.01e7      NA FALSE        11   0.524 /Cas… cast \n 9 Sasheer Za…    40 TRUE    NA           NA FALSE        21   1     /Cas… cast \n10 Sasheer Za…    41 FALSE   NA           NA FALSE        21   1     /Cas… cast \n# … with 604 more rows, 1 more variable: gender <chr>, and abbreviated variable\n#   names ¹​featured, ²​first_epid, ³​last_epid, ⁴​update_anchor, ⁵​n_episodes,\n#   ⁶​season_fraction\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Joining the snl_ca and snl_seasons on \"sid\" column\nsnl_cas <- left_join(snl_ca, snl_seasons, by = \"sid\")\nsnl_cas\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 614 × 15\n   aid           sid featu…¹ first…² last_…³ updat…⁴ n_epi…⁵ seaso…⁶ url   type \n   <chr>       <dbl> <lgl>     <dbl>   <dbl> <lgl>     <dbl>   <dbl> <chr> <chr>\n 1 A. Whitney…    11 TRUE     1.99e7      NA FALSE         8   0.444 /Cas… cast \n 2 A. Whitney…    12 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 3 A. Whitney…    13 TRUE    NA           NA FALSE        13   1     /Cas… cast \n 4 A. Whitney…    14 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 5 A. Whitney…    15 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 6 A. Whitney…    16 TRUE    NA           NA FALSE        20   1     /Cas… cast \n 7 Alan Zweib…     5 TRUE     1.98e7      NA FALSE         5   0.25  /Cas… cast \n 8 Sasheer Za…    39 TRUE     2.01e7      NA FALSE        11   0.524 /Cas… cast \n 9 Sasheer Za…    40 TRUE    NA           NA FALSE        21   1     /Cas… cast \n10 Sasheer Za…    41 FALSE   NA           NA FALSE        21   1     /Cas… cast \n# … with 604 more rows, 5 more variables: gender <chr>, year <dbl>,\n#   first_epid.y <dbl>, last_epid.y <dbl>, n_episodes.y <dbl>, and abbreviated\n#   variable names ¹​featured, ²​first_epid.x, ³​last_epid.x, ⁴​update_anchor,\n#   ⁵​n_episodes.x, ⁶​season_fraction\n```\n:::\n:::\n\n\n## Data Analysis\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsnl_actors_years <- select(snl_cas, aid, year)\nsnl_yoy_actors <- count(snl_actors_years, year)\nsnl_yoy_actors <- mutate(snl_yoy_actors, \n                       year = as.Date(paste0(as.character(year), \"0101\"),format = \"%Y%m%d\"))\nsnl_yoy_actors\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 46 × 2\n   year           n\n   <date>     <int>\n 1 1975-01-01     9\n 2 1976-01-01     8\n 3 1977-01-01     9\n 4 1978-01-01     9\n 5 1979-01-01    15\n 6 1980-01-01    15\n 7 1981-01-01     8\n 8 1982-01-01     8\n 9 1983-01-01     9\n10 1984-01-01    10\n# … with 36 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Line plot of trend of number of actors on SNL over years\n\n#debt_pivoted$year_q <- yq(paste0(debt_pivoted$Year, \":\", debt_pivoted$Quarter))\n\nggplot(snl_yoy_actors, aes(x = year, y = n)) +\n  geom_point(size=0.5) +\n  geom_line(size=0.5, color = \"#FFDF00\") +\n  geom_smooth(alpha = 0.1, color = \"#FFBF46\") + \n  scale_x_date(date_breaks = '3 years',\n               labels = date_format(\"%Y\")) +\n  scale_y_continuous(breaks = c(seq(1, 25, by=1))) +\n  labs(title = \"Number of actors on SNL (Y-o-Y)\",\n       subtitle = \"1975-2020\",\n       x = \"Years\",\n       y = \"# Actors\") +\n  theme_minimal() +\n  scale_color_brewer(palette = \"Dark2\")\n```\n\n::: {.cell-output-display}\n![](challenge_8_Prasann_Desai_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::",
    "supporting": [
      "challenge_8_Prasann_Desai_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}