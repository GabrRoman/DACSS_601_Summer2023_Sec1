{
  "hash": "a0700ae1011ce60baf437f5e2357ee21",
  "result": {
    "markdown": "---\ntitle: \"Challenge 4 Submission\"\nauthor: \"Matt Zambetti\"\ndescription: \"More data wrangling: pivoting\"\ndate: \"5/30/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_4\n  - abc_poll\n  - eggs\n  - fed_rates\n  - hotel_bookings\n  - debt\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  identify variables that need to be mutated\n4)  mutate variables and sanity check all mutations\n\n## Read in data\n\nThe Data Set I chose to read in was the organic poultry data:\n\n-   organiceggpoultry.xls⭐⭐\n\n\n::: {.cell}\n\n```{.r .cell-code}\norg_poultry_data <- read_excel(\"_data/organiceggpoultry.xls\")\n\nhead(org_poultry_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 11\n  (Certified Organic den…¹ ...2  ...3  ...4  ...5  ...6  ...7  ...8  ...9  ...10\n  <chr>                    <chr> <chr> <chr> <chr> <lgl> <chr> <chr> <chr> <chr>\n1 <NA>                      <NA>  <NA>  <NA>  <NA> NA    <NA>  <NA>  <NA>  <NA> \n2 USDA Certified Organic …  <NA>  <NA>  <NA>  <NA> NA    USDA… <NA>  <NA>  <NA> \n3 Price per Carton Delive…  <NA>  <NA>  <NA>  <NA> NA    Pric… <NA>  <NA>  <NA> \n4 <NA>                     \"Ext… \"Ext… \"Lar… \"Lar… NA    Whole B/S … Bone… Whol…\n5 Jan 2004                 \"230\" \"132\" \"230\" \"126\" NA    197.5 645.5 too … 193.5\n6 February                 \"230\" \"134… \"226… \"128… NA    197.5 642.5 too … 193.5\n# ℹ abbreviated name:\n#   ¹​`(Certified Organic denotes products grown and processed according to USDA's national organic standards and certified by USDA-accredited State and private certification organizations.)`\n# ℹ 1 more variable: ...11 <chr>\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThis data has various parts of the chicken (ranging from whole, to breast) with their month, year and price.\n\n## Tidy Data (as needed)\n\nWe needed to do a few things to tidy the data. The first was removing the first three rows, these all contained data that was not necessary. \n\nThe second was adding the column headers. Interestingly enough, these were actually in the fourth row, so we moved it up. In addition, some of the names had an extra newline character, so we removed those with gsub.\n\nFinally, the \"Extra Large 1/2 Dozen\" has some weird formatting so we manually edited this column name.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\norg_poultry_data <- org_poultry_data[-c(1,2,3),]\n\n# Changing the column names\ncolnames(org_poultry_data) <- \n  gsub('\\n','',org_poultry_data[1,])\n\ncolnames(org_poultry_data)[1] = 'Month'\n\norg_poultry_data <- org_poultry_data[-c(1),]\n\n# This one is weird\ncolnames(org_poultry_data)[3] <- \"Extra Large 1/2 Dozen\"\n\nhead(org_poultry_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 11\n  Month    `Extra Large Dozen` `Extra Large 1/2 Dozen` `Large Dozen`\n  <chr>    <chr>               <chr>                   <chr>        \n1 Jan 2004 230                 132                     230          \n2 February 230                 134.5                   226.25       \n3 March    230                 137                     225          \n4 April    234.5               137                     225          \n5 May      236                 137                     225          \n6 June     241                 137                     231.375      \n# ℹ 7 more variables: `Large 1/2 Doz.` <chr>, `NA` <lgl>, Whole <chr>,\n#   `B/S Breast` <chr>, `Bone-in Breast` <chr>, `Whole Legs` <chr>,\n#   Thighs <chr>\n```\n:::\n:::\n\n\n\n## Identify variables that need to be mutated\n\nThe first set of variables that need to be mutated are the dates. The issue here is that only January of every year has a year attached to it. So the issue is expanding the year to a new column so every month is paired with a year.\n\nSecondly, in the \"Bone-in Breast\" column, there were some string values that were labeled \"too few\", so we had to replace those with the value 0.\n\nFinally, all the columns aside from the month, needed to be converted into ints from chrs, which we were able to do as seen below.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Add the year\norg_poultry_data <- add_column(org_poultry_data, year = 0, .before=1)\n\nyear <- 2003\nfor (idx in 1:120) {\n  if (idx %% 12 == 1) {\n    year <- year + 1\n    org_poultry_data[idx, 2] <- \"January\"\n  }\n  org_poultry_data[idx, 1] <- year\n}\n\n# Replacing non-numbers to 0\norg_poultry_data[9] <- replace(org_poultry_data$`Bone-in Breast`, \n                            org_poultry_data$`Bone-in Breast`=='too few','0')\n\n# Change chr to int\n\norg_poultry_data$'Extra Large Dozen' <- as.numeric(org_poultry_data$'Extra Large Dozen')\norg_poultry_data$'Extra Large 1/2 Dozen' <- as.numeric(org_poultry_data$'Extra Large 1/2 Dozen')\norg_poultry_data$'Large 1/2 Doz.' <- as.numeric(org_poultry_data$'Large 1/2 Doz.')\norg_poultry_data$'Whole' <- as.numeric(org_poultry_data$'Whole')\norg_poultry_data$'B/S Breast' <- as.numeric(org_poultry_data$'B/S Breast')\norg_poultry_data$'Large Dozen' <- as.numeric(org_poultry_data$'Large Dozen')\norg_poultry_data$'Bone-in Breast' <- as.numeric(org_poultry_data$'Bone-in Breast')\norg_poultry_data$'Whole Legs' <- as.numeric(org_poultry_data$'Whole Legs')\norg_poultry_data$'Thighs' <- as.numeric(org_poultry_data$'Thighs')\n\n# Removing column 7 (NA)\norg_poultry_data <- org_poultry_data[-c(7)]\n\n\n# Printing the final data\norg_poultry_data\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 11\n    year Month     `Extra Large Dozen` `Extra Large 1/2 Dozen` `Large Dozen`\n   <dbl> <chr>                   <dbl>                   <dbl>         <dbl>\n 1  2004 January                  230                     132           230 \n 2  2004 February                 230                     134.          226.\n 3  2004 March                    230                     137           225 \n 4  2004 April                    234.                    137           225 \n 5  2004 May                      236                     137           225 \n 6  2004 June                     241                     137           231.\n 7  2004 July                     241                     137           234.\n 8  2004 August                   241                     137           234.\n 9  2004 September                241                     136.          234.\n10  2004 October                  241                     136.          234.\n# ℹ 110 more rows\n# ℹ 6 more variables: `Large 1/2 Doz.` <dbl>, Whole <dbl>, `B/S Breast` <dbl>,\n#   `Bone-in Breast` <dbl>, `Whole Legs` <dbl>, Thighs <dbl>\n```\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}