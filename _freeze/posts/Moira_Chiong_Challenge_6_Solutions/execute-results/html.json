{
  "hash": "3a012b05696849e7dfffea2d18586d1b",
  "result": {
    "markdown": "---\ntitle: \"Challenge 6 Solutions\"\nauthor: \"Moira Chiong\"\ndescription: \"Visualizing Time and Relationships\"\ndate: \"6/20/2023\"\nformat:\n  html:\n    toc: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_6\n  - hotel_bookings\n  - air_bnb\n  - fed_rate\n  - debt\n  - usa_households\n  - abc_poll\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nsetwd(\"C:/Users/chion/OneDrive/Desktop/DACSS 601/DACSS_601_Summer2023_Sec1/posts\")\nlibrary(readr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'readr' was built under R version 4.1.3\n```\n:::\n\n```{.r .cell-code}\nAB_NYC_2019 <- read_csv(\"_data/AB_NYC_2019.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 48895 Columns: 16\n-- Column specification --------------------------------------------------------\nDelimiter: \",\"\nchr   (5): name, host_name, neighbourhood_group, neighbourhood, room_type\ndbl  (10): id, host_id, latitude, longitude, price, minimum_nights, number_o...\ndate  (1): last_review\n\ni Use `spec()` to retrieve the full column specification for this data.\ni Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nView(AB_NYC_2019)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2)  tidy data (as needed, including sanity checks)\n3)  mutate variables as needed (including sanity checks)\n4)  create at least one graph including time (evolution)\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n5)  Create at least one graph depicting part-whole or flow relationships\n   - try to make them \"publication\" ready (optional)\n   - Explain why you choose the specific graph type\n\n[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.\n\n(be sure to only include the category tags for the data you use!)\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n  - debt  ⭐\n  - fed_rate ⭐⭐\n  - abc_poll ⭐⭐⭐\n  - usa_hh ⭐⭐⭐\n  - hotel_bookings ⭐⭐⭐⭐\n  - AB_NYC ⭐⭐⭐⭐⭐\n\n  \n\n### Briefly describe the data\n\nThere are 48895 observations with 17 variables. The data set pertains to review and other administrative records for AirBnB in New York City. There are categorical variables in the data set, namely the boroughs of Brooklyn, Manhattan, Queens, Staten Island and Bronx, as well as room type: private room, entire home/apartment and shared room. The dates of the last review range from March 2011 to July 2019. The minimum cost ranges from 0 to $1.2M. The mean minimum cost is $1284.43. The composition of the lodging by room type is as follows: 52% Entire home/apartment, 46% private room and 2.4% shared room. In terms of boroughs where the Airbnb lodging is located, 2% where in the Bronx, 41% in Brooklyn, 44% in Manhattan, 12% in Queens and 1% in Staten Island. \n\n## Tidy Data (as needed)\n\nIs your data already tidy, or is there work to be done? Be sure to anticipate your end result to provide a sanity check, and document your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nunique(AB_NYC_2019$neighbourhood_group)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Brooklyn\"      \"Manhattan\"     \"Queens\"        \"Staten Island\"\n[5] \"Bronx\"        \n```\n:::\n\n```{.r .cell-code}\nproproomtype <- c(AirbnbNYC$room_type, NA)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'AirbnbNYC' not found\n```\n:::\n\n```{.r .cell-code}\nprop.table(table(AirbnbNYC$room_type))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(AirbnbNYC$room_type): object 'AirbnbNYC' not found\n```\n:::\n\n```{.r .cell-code}\npropneighgroup <- c(AirbnbNYC$neighbourhood_group, NA)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'AirbnbNYC' not found\n```\n:::\n\n```{.r .cell-code}\nprop.table((table(AirbnbNYC$neighbourhood_group)))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in table(AirbnbNYC$neighbourhood_group): object 'AirbnbNYC' not found\n```\n:::\n:::\n\n\nAre there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?\n\nDocument your work here.\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(\"tidyverse\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: package 'tidyverse' is in use and will not be installed\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(ggplot2)\n \nAirbnbNYC <- AB_NYC_2019 %>%\n\nmutate(`minimum_cost`= `price`*`minimum_nights`)\n\n## Time Dependent Visualization\nvis1a <- ggplot(AirbnbNYC, aes(x=last_review, y=minimum_cost, color=room_type)) +\n     geom_point() +\n  labs(y= \"Minimum Cost\", x= \"Date of Last Review\", color= \"Room Type\", title = \"Minimum Cost over Date of Last Review\")\nprint(vis1a)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 10052 rows containing missing values (`geom_point()`).\n```\n:::\n\n::: {.cell-output-display}\n![](Moira_Chiong_Challenge_6_Solutions_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\n## Visualizing Part-Whole Relationships\nvis2a <- ggplot(AirbnbNYC, aes(x = room_type, fill = neighbourhood_group)) + \n  geom_bar() +\nlabs(y= \"Frequency\", x= \"Room Type\", fill = \"Borough\", title=\"Number of AirBnB listings by Room Type and Borough\") \nprint(vis2a)\n```\n\n::: {.cell-output-display}\n![](Moira_Chiong_Challenge_6_Solutions_files/figure-html/unnamed-chunk-4-2.png){width=672}\n:::\n:::",
    "supporting": [
      "Moira_Chiong_Challenge_6_Solutions_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}