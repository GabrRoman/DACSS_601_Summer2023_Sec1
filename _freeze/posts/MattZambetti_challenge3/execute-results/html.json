{
  "hash": "dd46ca564a842baa2492866252ce04e5",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Submission\"\nauthor: \"Matt Zambetti\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"5/30/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Read in data\n\nThe data set I chose is:\n\n-   eggs_tidy.csv ⭐⭐ \n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_table <- read_csv(\"_data/eggs_tidy.csv\")\neggs_table\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>\n 1 January    2004             126         230                    132 \n 2 February   2004             128.        226.                   134.\n 3 March      2004             131         225                    137 \n 4 April      2004             131         225                    137 \n 5 May        2004             131         225                    137 \n 6 June       2004             134.        231.                   137 \n 7 July       2004             134.        234.                   137 \n 8 August     2004             134.        234.                   137 \n 9 September  2004             130.        234.                   136.\n10 October    2004             128.        234.                   136.\n# ℹ 110 more rows\n# ℹ 1 more variable: extra_large_dozen <dbl>\n```\n:::\n:::\n\n\n### Briefly describe the data\n\nThe data, as seen above is a list of the sales of large half dozen, large dozen, extra large half dozen, and extra large dozen carton of eggs for every month from January 2004 through December 2013.\n\nIn pivoting the data, I am looking to 'pivot longer' so that our data is listed by the month, year and the product instead of month and year. This way, we can do the 'group by' function to more easily compare the sales of the the same egg carton size over time.\n\n## Anticipate the End Result\n\nHere we look into the dimensions of the data and predict the output shape.\n\n### Challenge: Describe the final dimensions\n\nDocument your work here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nncol(eggs_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\nnrow(eggs_table)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n(ncol(eggs_table)-2)*(nrow(eggs_table))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n:::\n\n\nLooking at the current dimensions of my data we know there are 120 rows already (12 months over 10 years) and the data we're separating by 6 variables to start. However, we want to keep the month and year so we will expand the number of rows 4 times for each month and year combination. Leaving us with the expected size of 480 rows and 4 columns (month, year, product, and count). The columns with go to a size of four because we will add in the count variable for each month, year, and product combination as well as the month, year, and product variable.\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n### Challenge: Pivot the Chosen Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_table %>%\n  pivot_longer(\n    cols= -c(year, month),\n    names_to = \"product\",\n    values_to = \"count\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month     year product                count\n   <chr>    <dbl> <chr>                  <dbl>\n 1 January   2004 large_half_dozen        126 \n 2 January   2004 large_dozen             230 \n 3 January   2004 extra_large_half_dozen  132 \n 4 January   2004 extra_large_dozen       230 \n 5 February  2004 large_half_dozen        128.\n 6 February  2004 large_dozen             226.\n 7 February  2004 extra_large_half_dozen  134.\n 8 February  2004 extra_large_dozen       230 \n 9 March     2004 large_half_dozen        131 \n10 March     2004 large_dozen             225 \n# ℹ 470 more rows\n```\n:::\n:::\n\n\nHere we can see that my predictions were correct, in that the expected number of rows was 480 which we received and the number of columns was 4 as also predicted.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}