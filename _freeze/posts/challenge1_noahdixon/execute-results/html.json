{
  "hash": "b54fb39c7d35c5916abfbea4cde2a49b",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1\"\nauthor: \"Noah Dixon\"\ndescription: \"Reading in data and creating a post\"\ndate: \"6/02/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - railroads\n  - faostat\n  - wildbirds\n---\n\n\nSetup\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Part 1: Read in the Data\n\nUsing the read_csv function we can load the birds.csv data from the file.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbirds_from_csv <- read_csv(\"_data/birds.csv\")\n```\n:::\n\n\n## Part 2: Describe the data\n\nUsing the dim function we can see the dimensions of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndim(birds_from_csv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 30977    14\n```\n:::\n:::\n\n\nWe can see that there are 14 columns and 30977 rows in the data set. Now, using the colnames and spec functions, we can see the names and data types of each of the 14 columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolnames(birds_from_csv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"Domain Code\"      \"Domain\"           \"Area Code\"        \"Area\"            \n [5] \"Element Code\"     \"Element\"          \"Item Code\"        \"Item\"            \n [9] \"Year Code\"        \"Year\"             \"Unit\"             \"Value\"           \n[13] \"Flag\"             \"Flag Description\"\n```\n:::\n\n```{.r .cell-code}\nspec(birds_from_csv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ncols(\n  `Domain Code` = col_character(),\n  Domain = col_character(),\n  `Area Code` = col_double(),\n  Area = col_character(),\n  `Element Code` = col_double(),\n  Element = col_character(),\n  `Item Code` = col_double(),\n  Item = col_character(),\n  `Year Code` = col_double(),\n  Year = col_double(),\n  Unit = col_character(),\n  Value = col_double(),\n  Flag = col_character(),\n  `Flag Description` = col_character()\n)\n```\n:::\n:::\n\n\nIn order to get a better sense of what the data in these columns looks like, we can print the first 6 rows of the data using the head function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(birds_from_csv)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 14\n  `Domain Code` Domain      `Area Code` Area  `Element Code` Element `Item Code`\n  <chr>         <chr>             <dbl> <chr>          <dbl> <chr>         <dbl>\n1 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n2 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n3 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n4 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n5 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n6 QA            Live Anima…           2 Afgh…           5112 Stocks         1057\n# ℹ 7 more variables: Item <chr>, `Year Code` <dbl>, Year <dbl>, Unit <chr>,\n#   Value <dbl>, Flag <chr>, `Flag Description` <chr>\n```\n:::\n:::\n\n\nWe can see that each of the first 6 rows have data from the Area Afghanistan. Using the distinct and select functions, lets see a full list of all the Areas for this data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistinct(select(birds_from_csv, \"Area\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 248 × 1\n   Area               \n   <chr>              \n 1 Afghanistan        \n 2 Albania            \n 3 Algeria            \n 4 American Samoa     \n 5 Angola             \n 6 Antigua and Barbuda\n 7 Argentina          \n 8 Armenia            \n 9 Aruba              \n10 Australia          \n# ℹ 238 more rows\n```\n:::\n:::\n\n\nWe can see that the full list of Areas is extensive, and we can infer that this data was collected from all around the world. Lets do some more select statements to get a better understanding of the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndistinct(select(birds_from_csv, \"Item\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 5 × 1\n  Item                  \n  <chr>                 \n1 Chickens              \n2 Ducks                 \n3 Geese and guinea fowls\n4 Turkeys               \n5 Pigeons, other birds  \n```\n:::\n\n```{.r .cell-code}\ndistinct(select(birds_from_csv, \"Year\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 58 × 1\n    Year\n   <dbl>\n 1  1961\n 2  1962\n 3  1963\n 4  1964\n 5  1965\n 6  1966\n 7  1967\n 8  1968\n 9  1969\n10  1970\n# ℹ 48 more rows\n```\n:::\n\n```{.r .cell-code}\ndistinct(select(birds_from_csv, \"Element\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  Element\n  <chr>  \n1 Stocks \n```\n:::\n\n```{.r .cell-code}\ndistinct(select(birds_from_csv, \"Unit\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 1\n  Unit     \n  <chr>    \n1 1000 Head\n```\n:::\n:::\n\n\nFrom these results we can see that the data set contains the number of \"Stocks\" of birds in \"1000 Head\" units for chickens, ducks, geese & guinea fowls, turkeys, and pigeons & other birds for areas all around the world from 1961-2018. Each record contains data specific to a bird type, area, and year.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}