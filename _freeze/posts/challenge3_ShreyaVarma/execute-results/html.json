{
  "hash": "8fcab68218e674a9cac5b44be89973f5",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 Solution\"\nauthor: \"Shreya Varma\"\ndescription: \"Tidy Data: Pivoting\"\ndate: \"5/30/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to:\n\n1.  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)\n2.  identify what needs to be done to tidy the current data\n3.  anticipate the shape of pivoted data\n4.  pivot the data into tidy format using `pivot_longer`\n\n## Read in data\n\nRead in one (or more) of the following datasets, using the correct R package and command.\n\n-   animal_weights.csv ‚≠ê\n-   eggs_tidy.csv ‚≠ê‚≠ê or organiceggpoultry.xls ‚≠ê‚≠ê‚≠ê\n-   australian_marriage\\*.xls ‚≠ê‚≠ê‚≠ê\n-   USA Households\\*.xlsx ‚≠ê‚≠ê‚≠ê‚≠ê\n-   sce_labor_chart_data_public.xlsx üåüüåüüåüüåüüåü\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_tidy <- read_csv(\"_data/eggs_tidy.csv\")\neggs_tidy\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 √ó 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>\n 1 January    2004             126         230                    132 \n 2 February   2004             128.        226.                   134.\n 3 March      2004             131         225                    137 \n 4 April      2004             131         225                    137 \n 5 May        2004             131         225                    137 \n 6 June       2004             134.        231.                   137 \n 7 July       2004             134.        234.                   137 \n 8 August     2004             134.        234.                   137 \n 9 September  2004             130.        234.                   136.\n10 October    2004             128.        234.                   136.\n# ‚Ñπ 110 more rows\n# ‚Ñπ 1 more variable: extra_large_dozen <dbl>\n```\n:::\n\n```{.r .cell-code}\nglimpse(eggs_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 120\nColumns: 6\n$ month                  <chr> \"January\", \"February\", \"March\", \"April\", \"May\",‚Ä¶\n$ year                   <dbl> 2004, 2004, 2004, 2004, 2004, 2004, 2004, 2004,‚Ä¶\n$ large_half_dozen       <dbl> 126.00, 128.50, 131.00, 131.00, 131.00, 133.50,‚Ä¶\n$ large_dozen            <dbl> 230.000, 226.250, 225.000, 225.000, 225.000, 23‚Ä¶\n$ extra_large_half_dozen <dbl> 132.000, 134.500, 137.000, 137.000, 137.000, 13‚Ä¶\n$ extra_large_dozen      <dbl> 230.0, 230.0, 230.0, 234.5, 236.0, 241.0, 241.0‚Ä¶\n```\n:::\n\n```{.r .cell-code}\nsummary(eggs_tidy)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    month                year      large_half_dozen  large_dozen   \n Length:120         Min.   :2004   Min.   :126.0    Min.   :225.0  \n Class :character   1st Qu.:2006   1st Qu.:129.4    1st Qu.:233.5  \n Mode  :character   Median :2008   Median :174.5    Median :267.5  \n                    Mean   :2008   Mean   :155.2    Mean   :254.2  \n                    3rd Qu.:2011   3rd Qu.:174.5    3rd Qu.:268.0  \n                    Max.   :2013   Max.   :178.0    Max.   :277.5  \n extra_large_half_dozen extra_large_dozen\n Min.   :132.0          Min.   :230.0    \n 1st Qu.:135.8          1st Qu.:241.5    \n Median :185.5          Median :285.5    \n Mean   :164.2          Mean   :266.8    \n 3rd Qu.:185.5          3rd Qu.:285.5    \n Max.   :188.1          Max.   :290.0    \n```\n:::\n:::\n\n\n### Briefly describe the data\n\nDescribe the data, and be sure to comment on why you are planning to pivot it to make it \"tidy\"\n\nThis dataset contains the data of type of eggs sold every month from 2004 to 2013. We can use pivot longer to reduce the number of columns and increase the number of rows. Thus the type of eggs can turn into columns and the egg value can become one column. Thus will result in 4 columns of dataset only and tidy it. \n\n\n## Anticipate the End Result\n\nThere are 120 rows and 6 columns in this dataset. Out of these 4 columns represent type of eggs which can become one column and its value can go into value column. Thus we should expect 120*4 = 480 rows in the pivoted dataframe. \n\n\n### Challenge: Describe the final dimensions\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf<-eggs_tidy\ndf\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 √ó 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>\n 1 January    2004             126         230                    132 \n 2 February   2004             128.        226.                   134.\n 3 March      2004             131         225                    137 \n 4 April      2004             131         225                    137 \n 5 May        2004             131         225                    137 \n 6 June       2004             134.        231.                   137 \n 7 July       2004             134.        234.                   137 \n 8 August     2004             134.        234.                   137 \n 9 September  2004             130.        234.                   136.\n10 October    2004             128.        234.                   136.\n# ‚Ñπ 110 more rows\n# ‚Ñπ 1 more variable: extra_large_dozen <dbl>\n```\n:::\n\n```{.r .cell-code}\n#existing rows/cases\nnrow(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n#existing columns/cases\nncol(df)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#expected rows/cases\nnrow(df) * 4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n# expected columns \nncol(df) -4 + 2\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\n\n\n## Pivot the Data\n\nNow we will pivot the data, and compare our pivoted data dimensions to the dimensions calculated above as a \"sanity\" check.\n\n\n### Challenge: Pivot the Chosen Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_tidy_pivoted <- pivot_longer(eggs_tidy, col = large_half_dozen:extra_large_dozen, names_to = \"eggs_type\", values_to = \"number\")\n\neggs_tidy_pivoted\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 √ó 4\n   month     year eggs_type              number\n   <chr>    <dbl> <chr>                   <dbl>\n 1 January   2004 large_half_dozen         126 \n 2 January   2004 large_dozen              230 \n 3 January   2004 extra_large_half_dozen   132 \n 4 January   2004 extra_large_dozen        230 \n 5 February  2004 large_half_dozen         128.\n 6 February  2004 large_dozen              226.\n 7 February  2004 extra_large_half_dozen   134.\n 8 February  2004 extra_large_dozen        230 \n 9 March     2004 large_half_dozen         131 \n10 March     2004 large_dozen              225 \n# ‚Ñπ 470 more rows\n```\n:::\n:::\n\n\nThus we have pivoted the data to get 480 rows.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}