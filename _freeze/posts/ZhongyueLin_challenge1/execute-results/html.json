{
  "hash": "58c46bf1f2cbd814f1d4c0bb0f90184a",
  "result": {
    "markdown": "---\ntitle: \"Challenge 1 \"\nauthor: \"Zhongyue Lin\"\ndescription: \"Reading in data and creating a post\"\ndate: \"5/31/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_1\n  - railroads\n  - faostat\n  - wildbirds\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n# Import the \"readxl\" package\nlibrary(readxl)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\n## Challenge Overview\n\nToday's challenge is to\n\n1)  read in a dataset, and\n\n2)  describe the dataset using both words and any supporting information (e.g., tables, etc)\n\n## Read in the Data\n\nRead in one (or more) of the following data sets, using the correct R package and command.\n\n-   wild_bird_data.xlsx ⭐⭐⭐\n-   StateCounty2012.xls ⭐⭐⭐⭐\n\nIn this challenge 1, I have chosen the raw data files \"wild_bird_data.xlsx\" and \"StateCounty2012.xls\" for practice. Since I have not had prior experience with handling and importing xls and xlsx data formats in R, importing these two raw data files is a new challenge for me.\n\n### wild_bird_data\n\nWhile working with the data from \"wild_bird_data.xlsx,\" I encountered a situation where the header of the dataset occupied one row. To avoid any data format errors during the import process, I used the setting \"skip=1\" to skip the first row while importing the data.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read the file\ndata_wild_brid <- read_excel(\"_data/wild_bird_data.xlsx\",skip = 1)\n#Preview Data\nhead(data_wild_brid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 2\n  `Wet body weight [g]` `Population size`\n                  <dbl>             <dbl>\n1                  5.46           532194.\n2                  7.76          3165107.\n3                  8.64          2592997.\n4                 10.7           3524193.\n5                  7.42           389806.\n6                  9.12           604766.\n```\n:::\n\n```{.r .cell-code}\ndim(data_wild_brid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 146   2\n```\n:::\n:::\n\n\nThen, I used the `dim()` function and `head()` function to have an initial preview of the data (146 rows, 2 columns).\n\n### StateCounty2012\n\nIn the data import process, I made adjustments and expansions to the code based on the format of the original file. I skipped the first three rows, which contained the headers, and removed any \"NA\" values present in the dataset. I also removed any unrelated content at the end of the table.\n\nHowever, there are still some remaining issues with this dataset. Each letter code includes rows labeled as \"total,\" which can affect data aggregation and analysis. However, this issue can be addressed in subsequent data processing steps.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Read the file, skipping the first 3 rows and specifying column names, then remove all columns that are completely empty, then replace NA values in the \"COUNTY\" column with \"/\" when \"STATE\" contains \"Total\"\ndata_clean <- read_excel(\"_data/StateCounty2012.xls\", skip = 3) %>%\n  select_if(~!all(is.na(.))) %>%\n  mutate(COUNTY = ifelse(is.na(COUNTY) & grepl(\"Total\", STATE), \"/\", COUNTY))\n\n# Print out the first few lines of the cleaned data\nhead(data_clean,100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 × 3\n   STATE     COUNTY               TOTAL\n   <chr>     <chr>                <dbl>\n 1 AE        APO                      2\n 2 AE Total1 /                        2\n 3 AK        ANCHORAGE                7\n 4 AK        FAIRBANKS NORTH STAR     2\n 5 AK        JUNEAU                   3\n 6 AK        MATANUSKA-SUSITNA        2\n 7 AK        SITKA                    1\n 8 AK        SKAGWAY MUNICIPALITY    88\n 9 AK Total  /                      103\n10 AL        AUTAUGA                102\n# … with 90 more rows\n```\n:::\n\n```{.r .cell-code}\n# Identify the rows where \"STATE\" is \"CANADA\" and replace NA values in \"COUNTY\" with \"Canada\", then remove empty rows above the \"CANADA\" row\ndata_clean <- data_clean %>%\n  mutate(COUNTY = replace(COUNTY, STATE == \"CANADA\", \"Canada\")) %>%\n  slice(1:(nrow(.)-4))\n\n# Print out the last few lines of the cleaned data to check\ntail(data_clean,100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 × 3\n   STATE COUNTY      TOTAL\n   <chr> <chr>       <dbl>\n 1 WI    ROCK          138\n 2 WI    RUSK           21\n 3 WI    SAUK           29\n 4 WI    SAWYER         14\n 5 WI    SHAWANO         9\n 6 WI    SHEBOYGAN       9\n 7 WI    ST CROIX      168\n 8 WI    TAYLOR         15\n 9 WI    TREMPEALEAU    54\n10 WI    VERNON         48\n# … with 90 more rows\n```\n:::\n\n```{.r .cell-code}\n# Remove the row before the \"CANADA\" row\ndata_clean <- data_clean %>%\n  slice(-which(.$STATE == \"CANADA\") + 1)\n\n# Print out the last few lines of the cleaned data to check\ntail(data_clean,100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 × 3\n   STATE COUNTY      TOTAL\n   <chr> <chr>       <dbl>\n 1 WI    RACINE        100\n 2 WI    ROCK          138\n 3 WI    RUSK           21\n 4 WI    SAUK           29\n 5 WI    SAWYER         14\n 6 WI    SHAWANO         9\n 7 WI    SHEBOYGAN       9\n 8 WI    ST CROIX      168\n 9 WI    TAYLOR         15\n10 WI    TREMPEALEAU    54\n# … with 90 more rows\n```\n:::\n:::\n\n\n## Describe the data\n\nUsing a combination of words and results of R commands, can you provide a high level description of the data? Describe as efficiently as possible where/how the data was (likely) gathered, indicate the cases and variables (both the interpretation and any details you deem useful to the reader to fully understand your chosen data).\n\n### wild_bird_data\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print the structure of the data\nstr(data_wild_brid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [146 × 2] (S3: tbl_df/tbl/data.frame)\n $ Wet body weight [g]: num [1:146] 5.46 7.76 8.64 10.69 7.42 ...\n $ Population size    : num [1:146] 532194 3165107 2592997 3524193 389806 ...\n```\n:::\n\n```{.r .cell-code}\n# Print a summary of the data\nsummary(data_wild_brid)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n Wet body weight [g] Population size  \n Min.   :   5.459    Min.   :      5  \n 1st Qu.:  18.620    1st Qu.:   1821  \n Median :  69.232    Median :  24353  \n Mean   : 363.694    Mean   : 382874  \n 3rd Qu.: 309.826    3rd Qu.: 198515  \n Max.   :9639.845    Max.   :5093378  \n```\n:::\n:::\n\n\nFirstly, the dataset file does not provide specific background information on data collection, so the following description is based on assumptions from the data itself:\n\nThe dataset, named \"wild_bird_data,\" consists of 146 rows and 2 columns. This dataset is likely gathered from field research, where researchers possibly conducted bird weight measurements at a specific location or a series of locations, and recorded the bird population size in these areas.\n\nThe two main variables are \"Wet body weight \\[g\\]\" and \"Population size\":\n\n\"Wet body weight \\[g\\]\": This variable represents the wet body weight of birds (in grams). The values range from 5.459g to 9639.845g, with an average of about 363.694g, and a median of about 69.232g. This variable could be very useful in studying the health conditions of birds, their life habits, or the impact of environmental changes on bird weight.\n\n\"Population size\": This variable represents the bird population size in a specific area. The values range widely, from a minimum of 5 to a maximum of 5093378, with an average of about 382874, and a median of about 24353. This variable could be very useful in studying the distribution of bird populations, dynamic changes in population, or the impact of environmental changes on population size.\n\n### StateCounty2012\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(data_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [2,985 × 3] (S3: tbl_df/tbl/data.frame)\n $ STATE : chr [1:2985] \"AE\" \"AE Total1\" \"AK\" \"AK\" ...\n $ COUNTY: chr [1:2985] \"APO\" \"/\" \"ANCHORAGE\" \"FAIRBANKS NORTH STAR\" ...\n $ TOTAL : num [1:2985] 2 2 7 2 3 2 1 88 103 102 ...\n```\n:::\n\n```{.r .cell-code}\n# Remove rows where \"STATE\" contains \"total\"\ndata_clean_rm <- data_clean %>%\n  filter(!grepl(\"total\", STATE, ignore.case = TRUE))\nsummary(data_clean_rm)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    STATE              COUNTY              TOTAL        \n Length:2931        Length:2931        Min.   :   1.00  \n Class :character   Class :character   1st Qu.:   7.00  \n Mode  :character   Mode  :character   Median :  21.00  \n                                       Mean   :  87.37  \n                                       3rd Qu.:  65.00  \n                                       Max.   :8207.00  \n```\n:::\n\n```{.r .cell-code}\ntail(data_clean_rm,100)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 100 × 3\n   STATE COUNTY  TOTAL\n   <chr> <chr>   <dbl>\n 1 WI    PIERCE     43\n 2 WI    POLK       23\n 3 WI    PORTAGE   240\n 4 WI    PRICE      10\n 5 WI    RACINE    100\n 6 WI    ROCK      138\n 7 WI    RUSK       21\n 8 WI    SAUK       29\n 9 WI    SAWYER     14\n10 WI    SHAWANO     9\n# … with 90 more rows\n```\n:::\n\n```{.r .cell-code}\n# Find the row with the maximum value\nmax_row <- data_clean %>%\n  filter(TOTAL == max(TOTAL, na.rm = TRUE))\n\n# Print out the row with the maximum value\nprint(max_row)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 3\n  STATE       COUNTY  TOTAL\n  <chr>       <chr>   <dbl>\n1 Grand Total /      255432\n```\n:::\n\n```{.r .cell-code}\n# Find the row with the minimum value\nmin_row <- data_clean %>%\n  filter(TOTAL == min(TOTAL, na.rm = TRUE))\n\n# Print out the row with the minimum value\nprint(min_row)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 146 × 3\n   STATE     COUNTY   TOTAL\n   <chr>     <chr>    <dbl>\n 1 AK        SITKA        1\n 2 AL        BARBOUR      1\n 3 AL        HENRY        1\n 4 AP        APO          1\n 5 AP Total1 /            1\n 6 AR        NEWTON       1\n 7 CA        MONO         1\n 8 CO        BENT         1\n 9 CO        CHEYENNE     1\n10 CO        COSTILLA     1\n# … with 136 more rows\n```\n:::\n:::\n\n\nThe data comes from an Excel file called \"StateCounty2012.xls\". After cleaning and processing, it now contains 2931 rows and 3 columns. These data likely come from a survey or statistic about railroad employment.\n\nThe three columns are as follows:\n\nThe \"STATE\" column: This is a character vector, representing various states and other areas in the United States (such as AE and AK), as well as Canada. The mode (most common value) of this column is \"character\".\n\nThe \"COUNTY\" column: This is also a character vector, representing various counties or regions. Note some special values, for example, when the value of the \"STATE\" column contains \"Total\", the value of this column is replaced with \"/\", indicating that this is a summary row. In the row where the value of the \"STATE\" column is \"CANADA\", the value of this column is replaced with \"Canada\".\n\nThe \"TOTAL\" column: This is a numeric vector, representing the total number of railroad employments in various states and counties. The minimum value of this column is 1, the first quartile is 7, the median is 21, the mean is 87.37, the third quartile is 65, and the maximum value is 8207 (located in Cook County, Illinois).\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}