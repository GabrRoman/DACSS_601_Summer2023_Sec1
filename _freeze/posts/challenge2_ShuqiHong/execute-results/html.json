{
  "hash": "6d6343bc5b05c05713ef731ee0a81c11",
  "result": {
    "markdown": "---\ntitle: \"Challenge 2\"\nauthor: \"Shuqi Hong\"\ndescription: \"Data wrangling: using group() and summarise()\"\ndate: \"6/6/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_2\n  - railroads\n  - faostat\n  - hotel_bookings\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readr)\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\nHere are the analysis for railroad file.\n\n::: {.cell}\n\n```{.r .cell-code}\nrr <- read_csv(\"_data/railroad_2012_clean_county.csv\")\n\n#discard county and group others\nrr2 <- rr %>% select(state,total_employees) %>% group_by(state) \n\nrr3 <- rr %>% select(state,total_employees)\n\n#Find mode function\ncompute_mode <- function(x){\n  mode_index <- which.max(table(x))\n  mode <- x[mode_index]\nreturn(mode)\n}\n\n#Calculate central tendency and dispersion for each state\nrr2 %>%\n  summarise(mean_employees=mean(total_employees),median_employees=median(total_employees), mode_employees=compute_mode(total_employees), iqr_employees=IQR(total_employees), sd_employees = sd(total_employees) , min_employees=min(total_employees), max_employees=max(total_employees)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 53 × 8\n   state mean_employees median_employees mode_employees iqr_employees\n   <chr>          <dbl>            <dbl>          <dbl>         <dbl>\n 1 AE               2                2                2           0  \n 2 AK              17.2              2.5              2           4  \n 3 AL              63.5             26               13          47  \n 4 AP               1                1                1           0  \n 5 AR              53.8             16.5              5          33.8\n 6 AZ             210.              94              270         296  \n 7 CA             239.              61                9         188  \n 8 CO              64.0             10              553          39  \n 9 CT             324              125              486         167. \n10 DC             279              279              279           0  \n# ℹ 43 more rows\n# ℹ 3 more variables: sd_employees <dbl>, min_employees <dbl>,\n#   max_employees <dbl>\n```\n:::\n\n```{.r .cell-code}\n#Calculate central tendency and dispersion for all states\nrr3 %>%\n  summarise(mean_employees=mean(total_employees),median_employees=median(total_employees), mode_employees=compute_mode(total_employees),iqr_employees=IQR(total_employees), sd_employees = sd(total_employees) , min_employees=min(total_employees), max_employees=max(total_employees)) \n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1 × 7\n  mean_employees median_employees mode_employees iqr_employees sd_employees\n           <dbl>            <dbl>          <dbl>         <dbl>        <dbl>\n1           87.2               21              2            58         284.\n# ℹ 2 more variables: min_employees <dbl>, max_employees <dbl>\n```\n:::\n\n```{.r .cell-code}\n#Filter out the number of employees of each county in AK\nrr%>% filter(`state`==\"AK\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 3\n  state county               total_employees\n  <chr> <chr>                          <dbl>\n1 AK    ANCHORAGE                          7\n2 AK    FAIRBANKS NORTH STAR               2\n3 AK    JUNEAU                             3\n4 AK    MATANUSKA-SUSITNA                  2\n5 AK    SITKA                              1\n6 AK    SKAGWAY MUNICIPALITY              88\n```\n:::\n:::\n\n\nHere are the analysis for hotel data\n\n::: {.cell}\n\n```{.r .cell-code}\nhb <- read_csv(\"_data/hotel_bookings.csv\")\n\n#See the name of each colunm\ncolnames(hb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n [1] \"hotel\"                          \"is_canceled\"                   \n [3] \"lead_time\"                      \"arrival_date_year\"             \n [5] \"arrival_date_month\"             \"arrival_date_week_number\"      \n [7] \"arrival_date_day_of_month\"      \"stays_in_weekend_nights\"       \n [9] \"stays_in_week_nights\"           \"adults\"                        \n[11] \"children\"                       \"babies\"                        \n[13] \"meal\"                           \"country\"                       \n[15] \"market_segment\"                 \"distribution_channel\"          \n[17] \"is_repeated_guest\"              \"previous_cancellations\"        \n[19] \"previous_bookings_not_canceled\" \"reserved_room_type\"            \n[21] \"assigned_room_type\"             \"booking_changes\"               \n[23] \"deposit_type\"                   \"agent\"                         \n[25] \"company\"                        \"days_in_waiting_list\"          \n[27] \"customer_type\"                  \"adr\"                           \n[29] \"required_car_parking_spaces\"    \"total_of_special_requests\"     \n[31] \"reservation_status\"             \"reservation_status_date\"       \n```\n:::\n\n```{.r .cell-code}\n#See what kind of hotel names there are\nunique(hb$hotel)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Resort Hotel\" \"City Hotel\"  \n```\n:::\n\n```{.r .cell-code}\n#Change the name of is_canceled which is not clear to see\nhb <- hb %>% \n  mutate(state = case_when\n         (is_canceled == \"1\" ~ \"canceled\",\n          is_canceled == \"0\" ~ \"regular\"))\n\n#make a new table for each hotel\nCityHotel <-hb %>% filter(`hotel` == \"City Hotel\")\nCityHotel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 79,330 × 33\n   hotel      is_canceled lead_time arrival_date_year arrival_date_month\n   <chr>            <dbl>     <dbl>             <dbl> <chr>             \n 1 City Hotel           0         6              2015 July              \n 2 City Hotel           1        88              2015 July              \n 3 City Hotel           1        65              2015 July              \n 4 City Hotel           1        92              2015 July              \n 5 City Hotel           1       100              2015 July              \n 6 City Hotel           1        79              2015 July              \n 7 City Hotel           0         3              2015 July              \n 8 City Hotel           1        63              2015 July              \n 9 City Hotel           1        62              2015 July              \n10 City Hotel           1        62              2015 July              \n# ℹ 79,320 more rows\n# ℹ 28 more variables: arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>, stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>, …\n```\n:::\n\n```{.r .cell-code}\nResortHotel <-hb %>% filter(`hotel` == \"Resort Hotel\")\nResortHotel\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 40,060 × 33\n   hotel        is_canceled lead_time arrival_date_year arrival_date_month\n   <chr>              <dbl>     <dbl>             <dbl> <chr>             \n 1 Resort Hotel           0       342              2015 July              \n 2 Resort Hotel           0       737              2015 July              \n 3 Resort Hotel           0         7              2015 July              \n 4 Resort Hotel           0        13              2015 July              \n 5 Resort Hotel           0        14              2015 July              \n 6 Resort Hotel           0        14              2015 July              \n 7 Resort Hotel           0         0              2015 July              \n 8 Resort Hotel           0         9              2015 July              \n 9 Resort Hotel           1        85              2015 July              \n10 Resort Hotel           1        75              2015 July              \n# ℹ 40,050 more rows\n# ℹ 28 more variables: arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>, stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>, …\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#Make a corsstable\ncomparison_hs <-xtabs(~hotel+state, hb)\ncomparison_hs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              state\nhotel          canceled regular\n  City Hotel      33102   46228\n  Resort Hotel    11122   28938\n```\n:::\n\n```{.r .cell-code}\ncomparison_hc <-xtabs(~hotel+children, hb)\ncomparison_hc\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n              children\nhotel              0     1     2     3    10\n  City Hotel   74220  3023  2024    59     0\n  Resort Hotel 36576  1838  1628    17     1\n```\n:::\n\n```{.r .cell-code}\nrowSums(comparison_hc)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n  City Hotel Resort Hotel \n       79326        40060 \n```\n:::\n:::\n\nFrom this new table, we can compare the number of cancel state of two hotel.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhb<- hb %>% mutate(`customer number` =adults + babies + children)\nhead(hb)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 34\n  hotel        is_canceled lead_time arrival_date_year arrival_date_month\n  <chr>              <dbl>     <dbl>             <dbl> <chr>             \n1 Resort Hotel           0       342              2015 July              \n2 Resort Hotel           0       737              2015 July              \n3 Resort Hotel           0         7              2015 July              \n4 Resort Hotel           0        13              2015 July              \n5 Resort Hotel           0        14              2015 July              \n6 Resort Hotel           0        14              2015 July              \n# ℹ 29 more variables: arrival_date_week_number <dbl>,\n#   arrival_date_day_of_month <dbl>, stays_in_weekend_nights <dbl>,\n#   stays_in_week_nights <dbl>, adults <dbl>, children <dbl>, babies <dbl>,\n#   meal <chr>, country <chr>, market_segment <chr>,\n#   distribution_channel <chr>, is_repeated_guest <dbl>,\n#   previous_cancellations <dbl>, previous_bookings_not_canceled <dbl>,\n#   reserved_room_type <chr>, assigned_room_type <chr>, …\n```\n:::\n\n```{.r .cell-code}\nhb %>% select(country,\"customer number\", hotel) %>% \n  pivot_wider(names_from=country, values_from=\"customer number\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 179\n  hotel PRT   GBR   USA   ESP   IRL   FRA   `NULL` ROU   NOR   OMN   ARG   POL  \n  <chr> <lis> <lis> <lis> <lis> <lis> <lis> <list> <lis> <lis> <lis> <lis> <lis>\n1 Reso… <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl>\n2 City… <dbl> <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>  <dbl> <dbl> <dbl> <dbl> <dbl>\n# ℹ 166 more variables: DEU <list>, BEL <list>, CHE <list>, CN <list>,\n#   GRC <list>, ITA <list>, NLD <list>, DNK <list>, RUS <list>, SWE <list>,\n#   AUS <list>, EST <list>, CZE <list>, BRA <list>, FIN <list>, MOZ <list>,\n#   BWA <list>, LUX <list>, SVN <list>, ALB <list>, IND <list>, CHN <list>,\n#   MEX <list>, MAR <list>, UKR <list>, SMR <list>, LVA <list>, PRI <list>,\n#   SRB <list>, CHL <list>, AUT <list>, BLR <list>, LTU <list>, TUR <list>,\n#   ZAF <list>, AGO <list>, ISR <list>, CYM <list>, ZMB <list>, CPV <list>, …\n```\n:::\n:::\n\nI don't know why the cell became <dbl[123]>. Maybe I still don't know the meaning of pivot_wider. I mean what does it mean to swap columns and rows?\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}