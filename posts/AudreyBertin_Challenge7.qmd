---
title: "Challenge 7"
author: "Audrey Bertin"
description: "Visualizing Multiple Dimensions"
date: "6/20/2023"
format:
  html:
    df-print: paged
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_7
  - air_bnb
  - ggplot2
  - audrey_bertin
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```


## Challenge Overview

For today's challenge, I'll be continuing with the AirBnB data from challenges 5 and 6. As a reminder, an overview of this data is provided in the following sections.

## The Data


```{r, message = FALSE}
airbnb <- readr::read_csv("_data/AB_NYC_2019.csv")

```

```{r}
glimpse(airbnb)
```

This dataset has 48,895 rows and 16 columns. It contains information on different AirBnB properties located in New York City, NY.

Each row represents a single property in the city. For each property, we have the following information;

- `id`: unique identifier for the property
- `name`: descriptive name shown on the AirBnB website that customers see when clicking on the property
- `host_id`: unique identifier for the host of the property
- `host_name`: first name of the property host
- `neighbourhood_group`: borough name where property is located
- `neighborhood`: neighborhood within the burough (more detailed location)
- `latitude/longitude`: geographical coordinates of property
- `room_type`: what type of property is being booked (private room in shared home, a whole home/apartment, etc)
- `price`: nightly price, presumably in USD
- `minimum_nights`: minimum length of stay
- `number_of_reviews`: total number of reviews for the property on AirBnB so far
- `last_review`: date of last review
- `reviews_per_month`: average number of reviews left for the property each month
- `calculated_host_listings_count`: number of listings/properties that this specific host has on AirBnB overall
- `availability_365`: number of nights in the year that the property is available for booking on AirBnB

Room types include:

```{r}
unique(airbnb$room_type)
```

All boroughs appear to be included:

```{r}
unique(airbnb$neighbourhood_group)
```

For each borough, we have the following count of neighborhoods and properties:

```{r}
airbnb %>%
  group_by(neighbourhood_group) %>%
  summarize(n_properties = n(), n_neighborhoods = n_distinct(neighbourhood)) %>%
  arrange(desc(n_properties))
```
Most of the properties are located in Manhattan and Brooklyn, with significantly fewer in Queens, the Bronx, and Staten Island. Within each borough, we have a few dozen neighborhoods covered, so this data seems to have pretty good coverage of the city with no obvious big missing areas of data.

## Tidy Data

Data is already in a tidy format, so no pivoting is necessary. Each row represents a single property, which can't be broken down into a longer format.

However, we can mutate a few of the variables to get them into a better format for visualization. Specifically, the following variables should be turned into factors:

- `neighbourhood_group`
- `neighbourhood`
- `room_type`

There are a few other modifications that can be made (e.g. converting some doubles to integers), but they are not necessary for the purpose of this visualization.

We do this mutation below:

```{r}
airbnb_tidy <- airbnb %>%
  mutate(neighbourhood_group = as_factor(neighbourhood_group),
         neighbourhood = as_factor(neighbourhood),
         room_type = as_factor(room_type))
```


## Additional Mutation

In challenge 6, we created a new column representing the *year* of last review date. We repeat this step here so that we can add onto the graph we created for challenge 6:

```{r}
airbnb_tidy <- airbnb_tidy %>%
  rowwise() %>%
  mutate(year_last_review = year(last_review))
```




## Visualization with Multiple Dimensions

In challenge 5, we created the following visualization, which shows the average price by property type. It is only two dimensional.

```{r}
challenge5_bar <- airbnb_tidy %>%
  group_by(room_type, neighbourhood_group) %>%
  summarize(avg_price = mean(price)) %>%
  ggplot(aes(x = room_type, y = avg_price)) +
  geom_col() +
  ggtitle("Average Nightly AirBnB Price By Property Listing Type, NYC") +
  ylab("Average Nightly Price ($)") +
  xlab("Property/Rental Type") +
  theme_minimal()

challenge5_bar
```

We can add another dimension by adding a `facet_wrap` and bringing borough name into the visualization:

```{r}
challenge5_bar + 
  facet_wrap(~neighbourhood_group) +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
  xlab(NULL)
```

When we break it up by borough, we can now compare prices across different areas! For example, we can see that average prices for entire homes/apartments are higher in Manhattan than in the other boroughs.

We can also view this a different way, using a colored bar chart:

```{r}
airbnb_tidy %>%
  group_by(room_type, neighbourhood_group) %>%
  summarize(avg_price = mean(price)) %>%
  ggplot(aes(x = room_type, y = avg_price, fill=neighbourhood_group)) +
  geom_col(position="dodge") +
  ggtitle("Average Nightly AirBnB Price By Property Listing Type, NYC") +
  ylab("Average Nightly Price ($)") +
  xlab("Property/Rental Type") +
  scale_fill_brewer(palette="Dark2")+
  theme_minimal()
```

In challenge 6, we created a line graph looking at properties by year of last review:

```{r}
airbnb_tidy %>%
  group_by(year_last_review) %>%
  summarize(n_properties = n_distinct(id)) %>%
  filter(!is.na(year_last_review)) %>%
  ggplot(aes(x= year_last_review, y = n_properties)) + 
  geom_line() +
  xlab("Year of Last Review") +
  ylab("Number of Properties") + 
  ggtitle("Number of AirBnB Properties in NYC by Date of Last Review") +
  scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019), labels = c("2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019")) +
  theme_minimal()
```

We can break this down by property type, by drawing multiple lines on the same graph:

```{r}
airbnb_tidy %>%
  group_by(year_last_review, room_type) %>%
  summarize(n_properties = n_distinct(id)) %>%
  filter(!is.na(year_last_review)) %>%
  ggplot(aes(x= year_last_review, y = n_properties, col=room_type)) + 
  geom_line() +
  xlab("Year of Last Review") +
  ylab("Number of Properties") + 
  ggtitle("Number of AirBnB Properties in NYC by Date of Last Review") +
  scale_x_continuous(breaks = c(2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019), labels = c("2011", "2012", "2013", "2014", "2015", "2016", "2017", "2018", "2019")) +
  theme_minimal()
```

Here, we can now see that private rooms and entire homes greatly shot up in property count, but shared rooms much less so.