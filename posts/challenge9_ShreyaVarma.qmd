---
title: "Challenge 9 Solution"
author: "Shreya Varma"
description: "Creating a function"
date: "7/10/2023"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_9
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is simple. Create a function, and use it to perform a data analysis / cleaning / visualization task:

Examples of such functions are:
1) A function that reads in and cleans a dataset.  
2) A function that computes summary statistics (e.g., computes the z score for a variable).  
3) A function that plots a histogram.  

That's it!

I will be using the Hotel Bookings dataset for my Challenge I have imported it using the read_csv() function and will use the glimpse() function the see the columns it has. On a high level it seems to have the information of hotel type and its customer data like arrival departure information, number of people, their booking details, payment type and reservation details. The data has 119,390 rows and 32 columns and seems to be captured from different hotels between 2015 to 2015 when people checked in and out.

A lot of columns have values that are encoded and not easily understandable. Thus, I will create a function that makes my data more readable by replacing value in columns by more readable value. 

```{r}

hotel_bookings <- read_csv("_data/hotel_bookings.csv")
head(hotel_bookings)

unique(hotel_bookings$meal)

replace_values <- function(data, column_name, old_value, new_value) {
  data[[column_name]][data[[column_name]] == old_value] <- new_value
  return(data)
}

hotel_bookings <- replace_values(hotel_bookings,"meal","BB", "Bed and Breakfast")
hotel_bookings <- replace_values(hotel_bookings,"meal","HB", "Half Board")
hotel_bookings <- replace_values(hotel_bookings,"meal","FB", "Full Board")
hotel_bookings <- replace_values(hotel_bookings,"meal","SC", "Self Catering")




unique(hotel_bookings$meal)

unique(hotel_bookings$market_segment)

hotel_bookings <- replace_values(hotel_bookings,"market_segment","Online TA", "Online Travel Agent")
hotel_bookings <- replace_values(hotel_bookings,"market_segment","Offline TA/TO", "Offline Travel Agent/Tour Operator")

unique(hotel_bookings$market_segment)

```

Thus I have replaced meal codes with their full forms and market segment short forms to make data more readable. The same can be done for other columns too using replace_values function.



