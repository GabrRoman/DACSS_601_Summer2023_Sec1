---
title: "Challenge 10 Post: Using Purr with the Aninal Weight Data"
author: "Hunter Major"
description: "purrr"
date: "7/9/2023"
format:
  html:
    df-print: paged
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_10
---

```{r}
#| label: setup
#| warning: false
#| message: false
#| include: false

library(tidyverse)
library(ggplot2)
library(purrr)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

The [purrr](https://purrr.tidyverse.org/) package is a powerful tool for functional programming. It allows the user to apply a single function across multiple objects. It can replace for loops with a more readable (and often faster) simple function call. 

For example, we can draw `n` random samples from 10 different distributions using a vector of 10 means.  

```{r}
n <- 100 # sample size
m <- seq(1,10) # means 
samps <- map(m,rnorm,n=n) 
```

We can then use `map_dbl` to verify that this worked correctly by computing the mean for each sample.  

```{r}
samps %>%
  map_dbl(mean)
```

`purrr` is tricky to learn (but beyond useful once you get a handle on it). Therefore, it's imperative that you complete the `purr` and `map` readings before attempting this challenge.  

## The challenge  

Use `purrr` with a function to perform *some* data science task. What this task is is up to you. It could involve computing summary statistics, reading in multiple datasets, running a random process multiple times, or anything else you might need to do in your work as a data analyst. You might consider using `purrr` with a function you wrote for challenge 9.  

## Reading in the Data
For this challenge, I am going to read in the animal_weight.csv dataset.


```{r}
animalweight1 <- read.csv("_data/animal_weight.csv")
animalweight1
```
## Solution
We can split the animal weight dataset based on IPCC.Area, which would return 9 datasets for each of the 9 IPCC.Areas, which are large(r) global regions.
```{r}
animalweight2_area <- split(animalweight1, animalweight1$IPCC.Area)
animalweight2_area
```

In Challenge 9, I created a function that could build a histogram for a variable which I will rework with slight adjustments below, this time using purr's map () to help visualize the histograms for Cattle (dairy and non-dairy), Swine (market and breeding), Buffaloes, Sheep, Turkeys, Ducks, Horses, Goats, and Llamas.
## Function for Histogram
```{r}
# Creating a function, build_histogram, to make a histogram
build_histogram <- function(data, col_name, title, fill="orange", xlab="x", ylab= "n") {
  col_name <- rlang::ensym(col_name)
  data %>%
    ggplot(aes({{col_name}})) + geom_histogram(fill= fill)+ labs(x=col_name, y=ylab)
}

```

## Building Histogram
```{r}
# building the histogram using map()
map(c("Cattle...dairy", "Cattle...non.dairy", "Buffaloes", "Swine...market", "Swine...breeding", "Sheep", "Turkeys", "Ducks", "Goats", "Horses", "Llamas"), ~build_histogram(dat=animalweight1, col_name=!!.x))
```


