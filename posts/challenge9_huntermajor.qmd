---
title: "Challenge 9 Post: Creating Functions for the Cereal Dataset"
author: "Hunter Major"
description: "Creating a function"
date: "7/5/2023"
format:
  html:
    df-print: paged
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_9
  - cereal
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is simple. Create a function, and use it to perform a data analysis / cleaning / visualization task:

Examples of such functions are:
1) A function that reads in and cleans a dataset.  
2) A function that computes summary statistics (e.g., computes the z score for a variable).  
3) A function that plots a histogram.  

That's it!

## Solution
For Challenge 9, I am going to read in the cereal.csv dataset. Since cereal.csv is already meets the qualifications for being a tidy dataset, I'll aim to create the two latter functions described in the instructions--creating a function that computes the z-score for a variable and creating a function that plots a histogram.

## Reading in the data
```{r}
# Reading in cereal.csv
cereal_1 <- read_csv("_data/cereal.csv")
cereal_1
```

## Creating function, calculate_z_score, to compute z-scores for Sodium and Sugar variables
```{r}
# Creating function to compute z-scores
calculate_z_score <- function(col_name) {
  z_score <- (col_name - mean(col_name)) / sd(col_name)
  return(z_score)
}

# Using z-score function for Sodium variable in cereal_1 dataset
calculate_z_score(cereal_1$Sodium)

# Using z-score function for Sugar variable in cereal_1 dataset
calculate_z_score(cereal_1$Sugar)
```

## Creating function, build_histogram, to make histograms for the Sodium variable
```{r}
# Creating a function, build_histogram, to make a histogram
build_histogram <- function(data, col_name, title, fill="orange", xlab="x", ylab= "Frequency", x_max= 350, y_max= 4) {
  data %>%
    ggplot(aes({{col_name}})) + geom_histogram(fill= fill)+ labs(x=xlab, y=ylab, title= title) + xlim(0,x_max)+ ylim(0,y_max)
}

# Using histogram function for Sodium variable in cereal_1 dataset
build_histogram(cereal_1, Sodium, "Histogram of Sodium Content in Cereals", xlab = "Sodium content(mg)", ylab = "Frequency")

```








